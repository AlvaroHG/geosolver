libdc1394 error: Failed to initialize libdc1394
/usr/local/lib/python2.7/dist-packages/sklearn/utils/class_weight.py:62: DeprecationWarning: The class_weight='auto' heuristic is deprecated in 0.17 in favor of a new heuristic class_weight='balanced'. 'auto' will be removed in 0.19
  " 0.19", DeprecationWarning)
/usr/local/lib/python2.7/dist-packages/sklearn/utils/class_weight.py:62: DeprecationWarning: The class_weight='auto' heuristic is deprecated in 0.17 in favor of a new heuristic class_weight='balanced'. 'auto' will be removed in 0.19
  " 0.19", DeprecationWarning)
/usr/local/lib/python2.7/dist-packages/sklearn/utils/class_weight.py:62: DeprecationWarning: The class_weight='auto' heuristic is deprecated in 0.17 in favor of a new heuristic class_weight='balanced'. 'auto' will be removed in 0.19
  " 0.19", DeprecationWarning)
accessing: http://localhost:8000/questions/download/aaai
accessing: http://localhost:8000/questions/download/emnlp
accessing: http://localhost:8000/questions/download/euclid
accessing: http://localhost:8000/questions/download/official
accessing: http://localhost:8000/questions/download/official
accessing: http://localhost:8000/semantics/download/all
accessing: http://localhost:8000/labels/download/all
[1025, 1027, 1030, 1031, 1032, 1035, 1037, 1475, 1485, 1480, 1481, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 963, 1476, 1477, 1478, 1479, 968, 969, 1482, 971, 1484, 973, 974, 975, 977, 979, 981, 985, 988, 989, 990, 993, 995, 997, 1000, 1003, 1004, 1005, 1006, 1011, 1014, 1017, 1018, 1019, 1020, 1483, 1151]
training: 2
training: 3
training: 4
training: 6
training: 9
training: 12
training: 14
training: 16
training: 17
training: 18
training: 19
training: 20
training: 21
training: 24
training: 25
training: 26
training: 27
training: 28
training: 29
training: 30
training: 31
training: 32
training: 33
training: 34
training: 36
training: 38
training: 39
training: 40
training: 41
training: 43
training: 46
training: 47
training: 48
training: 49
training: 52
training: 53
training: 54
training: 55
training: 56
training: 57
training: 58
training: 59
training: 60
training: 61
training: 62
training: 63
training: 64
training: 65
training: 66
training: 67
training: 68
training: 69
training: 70
training: 71
training: 73
training: 74
training: 75
training: 77
training: 1486
training: 79
training: 80
training: 82
training: 83
training: 84
training: 85
training: 86
Fitting RFUnaryModel:
# of positive examples: 209
# of negative examples: 796
length of feature vector: 71
Fitting RFCoreModel:
# of positive examples: 39
# of negative examples: 1014
length of feature vector: 189
Fitting RFIsModel:
# of positive examples: 58
# of negative examples: 2626
length of feature vector: 156
test ids: 1025, 1027, 1029, 1030, 1031, 1032, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1063, 1064, 1065, 1067, 1070, 1071, 1083, 1087, 1089, 1090, 1092, 1095, 1096, 1097, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1475, 968, 969, 971, 973, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 963, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 974, 975, 977, 979, 981, 985, 988, 989, 990, 993, 995, 997, 1000, 1003, 1004, 1005, 1006, 1011, 1014, 1017, 1018, 1019, 1020
--------------------------------------------------------------------------------
id: 1025
full unit_test entry
WWWWWWW opt_model
3.85, Is@6[is](ValueOf@8[value]($x:number@10[x]), $What:number@5[what])

completed formulas:
Is(ValueOf($x:number),$What:number)

Equals($x:number,Div(MeasureOf(Angle($point_0:point,$point_2:point,$point_5:point)),Degree())) None None
PointLiesOnLine($point_6:point,Line($point_1:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=78.36036036036036, y=67.0), line(a=point(x=220.0, y=67.0), b=point(x=1.3333333333333428, y=67.0))]
Is(ValueOf($x:number),$What:number) None None
Ge(180,55()) TV(norm=0.000, conf=1.00) [180, 55.0]
Equals(55(),Div(MeasureOf(Angle($point_4:point,$point_6:point,$point_0:point)),Degree())) TV(norm=1.669, conf=0.97) [55.0, 56.66877400036892]
Ge(180,$x:number) None None
PointLiesOnLine($point_7:point,Line($point_1:point,$point_6:point)) TV(norm=0.000, conf=1.00) [point(x=149.30000000000001, y=67.0), line(a=point(x=220.0, y=67.0), b=point(x=78.36036036036036, y=67.0))]
Equals(75(),Div(MeasureOf(Angle($point_5:point,$point_7:point,$point_1:point)),Degree())) TV(norm=0.231, conf=1.00) [75.0, 75.23080146970837]
PointLiesOnLine($point_6:point,Line($point_0:point,$point_2:point)) TV(norm=0.000, conf=1.00) [point(x=78.36036036036036, y=67.0), line(a=point(x=56.234559086040704, y=33.356658336308456), b=point(x=129.0, y=144.0))]
PointLiesOnLine($point_7:point,Line($point_2:point,$point_5:point)) TV(norm=0.000, conf=1.00) [point(x=geosolver/text/opt_model.py:152: RuntimeWarning: divide by zero encountered in log
  sum_log = sum(np.log(self.get_magic_score(t, cc_trees)) for t in semantic_trees)
149.30000000000001, y=67.0), line(a=point(x=129.0, y=144.0), b=point(x=158.0, y=34.0))]
PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)) TV(norm=0.003, conf=1.00) [point(x=56.234559086040704, y=33.356658336308456), line(a=point(x=109.00606060606061, y=1.1999999999999957), b=point(x=1.3333333333333428, y=67.0))]
PointLiesOnLine($point_7:point,Line($point_1:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=149.30000000000001, y=67.0), line(a=point(x=220.0, y=67.0), b=point(x=1.3333333333333428, y=67.0))]
PointLiesOnLine($point_6:point,Line($point_4:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=78.36036036036036, y=67.0), line(a=point(x=1.3333333333333428, y=67.0), b=point(x=149.30000000000001, y=67.0))]
Ge(180,75()) TV(norm=0.000, conf=1.00) [180, 75.0]
Solving...
Given formulas: set([Equals($x:number,Div(MeasureOf(Angle($point_0:point,$point_2:point,$point_5:point)),Degree())), PointLiesOnLine($point_6:point,Line($point_1:point,$point_4:point)), Is(ValueOf($x:number),$What:number), Ge(180,55()), Equals(55(),Div(MeasureOf(Angle($point_4:point,$point_6:point,$point_0:point)),Degree())), Ge(180,$x:number), PointLiesOnLine($point_7:point,Line($point_1:point,$point_6:point)), Equals(75(),Div(MeasureOf(Angle($point_5:point,$point_7:point,$point_1:point)),Degree())), PointLiesOnLine($point_6:point,Line($point_0:point,$point_2:point)), PointLiesOnLine($point_7:point,Line($point_2:point,$point_5:point)), PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)), PointLiesOnLine($point_7:point,Line($point_1:point,$point_4:point)), PointLiesOnLine($point_6:point,Line($point_4:point,$point_7:point)), Ge(180,75())])
iteration 1:
    nfev: 104216
     fun: 2.1854895089212789e-06
       x: array([ -50.38442507, -109.03985835,  -10.27845828,    5.55898663,
        -58.91715873,   28.72786315,  -15.49962443,  -47.45493493,
         49.99996853,   -6.78934147,   -8.60518404,   46.89837969,
         37.94681095,   49.9999686 ,  -34.1620969 ,  -42.61827337])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5314
     nit: 100
Equals(49.9999685338177,35())
49.9999685338
Equals(49.9999685338177,40())
49.9999685338
Equals(49.9999685338177,50())
49.9999685338
Equals(49.9999685338177,65())
49.9999685338
Equals(49.9999685338177,130())
49.9999685338
149.53 seconds
ans: {1: TV(norm=15.000, conf=0.65), 2: TV(norm=10.000, conf=0.78), 3: TV(norm=0.000, conf=1.00), 4: TV(norm=15.000, conf=0.74), 5: TV(norm=80.000, conf=0.11)}
idx 3, answeri: 3.0
Correct for multiple choice: index: 3 value: TV(norm=0.000, conf=1.00), golden: 3.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
1/55 complete, 1 correct, 0 penalized, 0 error
--------------------------------------------------------------------------------
id: 1027
full unit_test entry
WWWWWWW opt_model
0.98, IsRightTriangle@5[right]($triangles:triangle@6[triangles])

completed formulas:
IsRightTriangle($triangles:triangle)

3.87, Is@1[is](ValueOf@3[value]($@v_0:number@5[@v_0]), $What:number@0[What])

f and t: Add(Pow($x:number,2()),Pow($y:number,2())) Add@5[@v_0](Pow@5[@v_0]($x:number@5[@v_0], 2@5[@v_0]), Pow@5[@v_0]($y:number@5[@v_0], 2@5[@v_0]))
local entities: []
completed formulas:
Is(ValueOf($@v_0:number),$What:number)

PointLiesOnLine($point_12:point,Line($point_1:point,$point_8:point)) TV(norm=0.009, conf=1.00) [point(x=73.984615384615381, y=183.4153846153846), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=62.0, y=169.96673669467788))]
Equals($y:number,LengthOf(Line($point_3:point,$point_5:point))) None None
Equals(Sqrt(3()),LengthOf(Line($point_2:point,$point_7:point))) TV(norm=54.502, conf=0.00) [1.7320508075688772, 56.234435496340254]
PointLiesOnLine($point_9:point,Line($point_3:point,$point_11:point)) TV(norm=0.098, conf=0.97) [point(x=171.0, y=147.0), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=128.76586102719034, y=184.60574018126889))]
PointLiesOnLine($point_5:point,Line($point_9:point,$point_10:point)) TV(norm=0.008, conf=1.00) [point(x=151.58202483667847, y=164.62365606000293), line(a=point(x=171.0, y=147.0), b=point(x=110.0, y=203.0))]
PointLiesOnLine($point_5:point,Line($point_1:point,$point_3:point)) TV(norm=0.072, conf=0.98) [point(x=151.58202483667847, y=164.62365606000293), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=210.50694411824574, y=104.15655972567993))]
IsRightTriangle(Triangle($point_1:point,$point_5:point,$point_8:point)) TV(norm=0.252, conf=1.00) [triangle(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=151.58202483667847, y=164.62365606000293), c=point(x=62.0, y=169.96673669467788))]
PointLiesOnLine($point_8:point,Line($point_6:point,$point_12:point)) TV(norm=0.168, conf=0.95) [point(x=62.0, y=169.96673669467788), line(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=73.984615384615381, y=183.4153846153846))]
PointLiesOnLine($point_8:point,Line($point_6:point,$point_10:point)) TV(norm=0.072, conf=0.98) [point(x=62.0, y=169.96673669467788), line(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=110.0, y=203.0))]
IsRightTriangle(Triangle($point_6:point,$point_4:point,$point_2:point)) TV(norm=0.229, conf=0.99) [triangle(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=52.922237651259671, y=161.99761951993653), c=point(x=60.416774043452044, y=45.131340579221003))]
PointLiesOnLine($point_4:point,Line($point_6:point,$point_8:point)) TV(norm=0.054, conf=0.98) [point(x=52.922237651259671, y=161.99761951993653), line(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=62.0, y=169.96673669467788))]
Equals(90(),Div(MeasureOf(Angle($point_8:point,$point_1:point,$point_3:point)),Degree())) TV(norm=1.819, conf=0.98) [90.0, 88.18066085997064]
Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_8:point,$point_5:point)),Degree())) TV(norm=2.687, conf=0.97) [90.0, 87.31327736107649]
Equals(90(),Div(MeasureOf(Angle($point_3:point,$point_7:point,$point_6:point)),Degree())) TV(norm=2.743, conf=0.97) [90.0, 87.25722512246605]
PointLiesOnLine($point_9:point,Line($point_3:point,$point_5:point)) TV(norm=0.089, conf=0.97) [point(x=171.0, y=147.0), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=151.58202483667847, y=164.62365606000293))]
PointLiesOnLine($point_5:point,Line($point_1:point,$point_9:point)) TV(norm=0.010, conf=1.00) [point(x=151.58202483667847, y=164.62365606000293), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=171.0, y=147.0))]
Equals($x:number,LengthOf(Line($point_0:point,$point_3:point))) None None
PointLiesOnLine($point_8:point,Line($point_4:point,$point_12:point)) TV(norm=0.122, conf=0.96) [point(x=62.0, y=169.96673669467788), line(a=point(x=52.922237651259671, y=161.99761951993653), b=point(x=73.984615384615381, y=183.4153846153846))]
IsRightTriangle(Triangle($point_7:point,$point_2:point,$point_0:point)) TV(norm=0.223, conf=1.00) [triangle(a=point(x=96.5, y=2.0), b=point(x=60.416774043452044, y=45.131340579221003), c=point(x=136.13486513123806, y=35.491684960117425))]
PointLiesOnLine($point_2:point,Line($point_6:point,$point_7:point)) TV(norm=0.022, conf=0.99) [point(x=60.416774043452044, y=45.131340579221003), line(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=96.5, y=2.0))]
IsRightTriangle(Triangle($point_9:point,$point_3:point,$point_1:point)) TV(norm=1.507, conf=0.36) [triangle(a=point(x=171.0, y=147.0), b=point(x=210.50694411824574, y=104.15655972567993), c=point(x=99.198450259836676, y=211.1931607275427))]
PointLiesOnLine($point_0:point,Line($point_3:point,$point_7:point)) TV(norm=0.044, conf=0.99) [point(x=136.13486513123806, y=35.491684960117425), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=96.5, y=2.0))]
PointLiesOnLine($point_4:point,Line($point_6:point,$point_12:point)) TV(norm=0.127, conf=0.96) [point(x=52.922237651259671, y=161.99761951993653), line(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=73.984615384615381, y=183.4153846153846))]
Equals(90(),Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_7:point)),Degree())) TV(norm=4.259, conf=0.95) [90.0, 85.74126522847453]
PointLiesOnLine($point_4:point,Line($point_6:point,$point_10:point)) TV(norm=0.044, conf=0.99) [point(x=52.922237651259671, y=161.99761951993653), line(a=point(x=0.15721040189126256, y=120.46808510638297), b=point(x=110.0, y=203.0))]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_9:point)) TV(norm=0.094, conf=0.97) [point(x=110.0, y=203.0), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=171.0, y=147.0))]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_11:point)) TV(norm=0.126, conf=0.96) [point(x=110.0, y=203.0), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=128.76586102719034, y=184.60574018126889))]
Is(ValueOf(Add(Pow($x:number,2()),Pow($y:number,2()))),$What:number) None None
PointLiesOnLine($point_11:point,Line($point_5:point,$point_10:point)) TV(norm=0.056, conf=0.98) [point(x=128.76586102719034, y=184.60574018126889), line(a=point(x=151.58202483667847, y=164.62365606000293), b=point(x=110.0, y=203.0))]
Equals(90(),Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_2:point)),Degree())) TV(norm=0.434, conf=1.00) [90.0, 89.56619588757522]
PointLiesOnLine($point_11:point,Line($point_1:point,$point_5:point)) TV(norm=0.013, conf=1.00) [point(x=128.76586102719034, y=184.60574018126889), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=151.58202483667847, y=164.62365606000293))]
IsRightTriangle(Triangle($point_2:point,$point_4:point,$point_8:point)) TV(norm=0.829, conf=0.65) [triangle(a=point(x=60.416774043452044, y=45.131340579221003), b=point(x=52.922237651259671, y=161.99761951993653), c=point(x=62.0, y=169.96673669467788))]
PointLiesOnLine($point_9:point,Line($point_3:point,$point_10:point)) TV(norm=0.083, conf=0.97) [point(x=171.0, y=147.0), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=110.0, y=203.0))]
Ge(180,90()) TV(norm=0.000, conf=1.00) [180, 90.0]
IsRightTriangle(Triangle($point_8:point,$point_5:point,$point_2:point)) TV(norm=0.352, conf=0.97) [triangle(a=point(x=62.0, y=169.96673669467788), b=point(x=151.58202483667847, y=164.62365606000293), c=point(x=60.416774043452044, y=45.131340579221003))]
PointLiesOnLine($point_5:point,Line($point_3:point,$point_11:point)) TV(norm=0.079, conf=0.98) [point(x=151.58202483667847, y=164.62365606000293), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=128.76586102719034, y=184.60574018126889))]
Equals(Sqrt(10()),LengthOf(Line($point_2:point,$point_6:point))) TV(norm=93.310, conf=0.00) [3.1622776601683795, 96.471965286409414]
Equals(90(),Div(MeasureOf(Angle($point_7:point,$point_6:point,$point_10:point)),Degree())) TV(norm=2.199, conf=0.98) [90.0, 87.80054918606325]
IsRightTriangle(Triangle($point_8:point,$point_5:point,$point_4:point)) TV(norm=1.112, conf=0.60) [triangle(a=point(x=62.0, y=169.96673669467788), b=point(x=151.58202483667847, y=164.62365606000293), c=point(x=52.922237651259671, y=161.99761951993653))]
PointLiesOnLine($point_11:point,Line($point_3:point,$point_10:point)) TV(norm=0.002, conf=1.00) [point(x=128.76586102719034, y=184.60574018126889), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=110.0, y=203.0))]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_4:point)) TV(norm=0.116, conf=0.96) [point(x=62.0, y=169.96673669467788), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=52.922237651259671, y=161.99761951993653))]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_5:point)) TV(norm=0.096, conf=0.97) [point(x=110.0, y=203.0), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=151.58202483667847, y=164.62365606000293))]
PointLiesOnLine($point_5:point,Line($point_3:point,$point_10:point)) TV(norm=0.053, conf=0.98) [point(x=151.58202483667847, y=164.62365606000293), line(a=point(x=210.50694411824574, y=104.15655972567993), b=point(x=110.0, y=203.0))]
PointLiesOnLine($point_11:point,Line($point_1:point,$point_9:point)) TV(norm=0.005, conf=1.00) [point(x=128.76586102719034, y=184.60574018126889), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=171.0, y=147.0))]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_3:point)) TV(norm=0.128, conf=0.96) [point(x=110.0, y=203.0), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=210.50694411824574, y=104.15655972567993))]
PointLiesOnLine($point_5:point,Line($point_9:point,$point_11:point)) TV(norm=0.018, conf=0.99) [point(x=151.58202483667847, y=164.62365606000293), line(a=point(x=171.0, y=147.0), b=point(x=128.76586102719034, y=184.60574018126889))]
IsRightTriangle(Triangle($point_5:point,$point_3:point,$point_0:point)) TV(norm=0.144, conf=0.98) [triangle(a=point(x=151.58202483667847, y=164.62365606000293), b=point(x=210.50694411824574, y=104.15655972567993), c=point(x=136.13486513123806, y=35.491684960117425))]
Equals(2(),LengthOf(Line($point_1:point,$point_4:point))) TV(norm=65.540, conf=0.00) [2.0, 67.540277820745587]
PointLiesOnLine($point_11:point,Line($point_9:point,$point_10:point)) TV(norm=0.048, conf=0.98) [point(x=128.76586102719034, y=184.60574018126889), line(a=point(x=171.0, y=147.0), b=point(x=110.0, y=203.0))]
IsRightTriangle(Triangle($point_5:point,$point_4:point,$point_1:point)) TV(norm=0.344, conf=0.98) [triangle(a=point(x=151.58202483667847, y=164.62365606000293), b=point(x=52.922237651259671, y=161.99761951993653), c=point(x=99.198450259836676, y=211.1931607275427))]
Equals(Sqrt(7()),LengthOf(Line($point_6:point,$point_8:point))) TV(norm=76.567, conf=0.00) [2.6457513110645907, 79.212670289135914]
IsRightTriangle(Triangle($point_0:point,$point_2:point,$point_5:point)) TV(norm=0.216, conf=1.00) [triangle(a=point(x=136.13486513123806, y=35.491684960117425), b=point(x=60.416774043452044, y=45.131340579221003), c=point(x=151.58202483667847, y=164.62365606000293))]
PointLiesOnLine($point_12:point,Line($point_1:point,$point_4:point)) TV(norm=0.040, conf=0.99) [point(x=73.984615384615381, y=183.4153846153846), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=52.922237651259671, y=161.99761951993653))]
PointLiesOnLine($point_11:point,Line($point_1:point,$point_3:point)) TV(norm=0.045, conf=0.99) [point(x=128.76586102719034, y=184.60574018126889), line(a=point(x=99.198450259836676, y=211.1931607275427), b=point(x=210.50694411824574, y=104.15655972567993))]
Equals(Sqrt(3()),LengthOf(Line($point_0:point,$point_7:point))) TV(norm=50.158, conf=0.00) [1.7320508075688772, 51.890418146698202]
IsRightTriangle(Triangle($point_2:point,$point_6:point,$point_8:point)) TV(norm=0.016, conf=1.00) [triangle(a=point(x=60.416774043452044, y=45.131340579221003), b=point(x=0.15721040189126256, y=120.46808510638297), c=point(x=62.0, y=169.96673669467788))]
IsRightTriangle(Triangle($point_2:point,$point_4:point,$point_5:point)) TV(norm=0.169, conf=0.98) [triangle(a=point(x=60.416774043452044, y=45.131340579221003), b=point(x=52.922237651259671, y=161.99761951993653), c=point(x=151.58202483667847, y=164.62365606000293))]
Equals(Sqrt(6()),LengthOf(Line($point_1:point,$point_5:point))) TV(norm=67.642, conf=0.00) [2.4494897427831779, 70.091066837561797]
Solving...
Given formulas: set([PointLiesOnLine($point_12:point,Line($point_1:point,$point_8:point)), Equals($y:number,LengthOf(Line($point_3:point,$point_5:point))), Equals(Sqrt(3()),LengthOf(Line($point_2:point,$point_7:point))), PointLiesOnLine($point_9:point,Line($point_3:point,$point_11:point)), PointLiesOnLine($point_5:point,Line($point_9:point,$point_10:point)), PointLiesOnLine($point_5:point,Line($point_1:point,$point_3:point)), IsRightTriangle(Triangle($point_1:point,$point_5:point,$point_8:point)), PointLiesOnLine($point_8:point,Line($point_6:point,$point_12:point)), PointLiesOnLine($point_8:point,Line($point_6:point,$point_10:point)), IsRightTriangle(Triangle($point_6:point,$point_4:point,$point_2:point)), PointLiesOnLine($point_4:point,Line($point_6:point,$point_8:point)), Equals(90(),Div(MeasureOf(Angle($point_8:point,$point_1:point,$point_3:point)),Degree())), Equals(90(),Div(MeasureOf(Angle($point_2:point,$pERROR:root:1027
ERROR:root:Timeout
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 382, in _full_unit_test
    ans = solve(reduced_formulas, choice_formulas, assignment=None)#core_parse.variable_assignment)
  File "geosolver/solver/solve.py", line 41, in solve
    ns.solve()
  File "geosolver/solver/numeric_solver.py", line 29, in solve
    self.assignment, self.confidence = find_assignment(self.variable_handler, self.atoms, self.max_num_resets, self.tol)
  File "geosolver/solver/numeric_solver.py", line 69, in find_assignment
    result = basinhopping(func, init, minimizer_kwargs=minimizer_kwargs)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 576, in basinhopping
    new_global_min = bh.one_cycle()
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 121, in one_cycle
    xtrial, energy_trial, accept = self._monte_carlo_step()
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 72, in _monte_carlo_step
    minres = self.minimizer(x_after_step)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 243, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_minimize.py", line 388, in minimize
    constraints, **options)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py", line 374, in _minimize_slsqp
    g = append(fprime(x),0.0)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py", line 281, in function_wrapper
    return function(*(wrapper_args + args))
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py", line 62, in approx_jacobian
    jac[i] = (func(*((x0+dx,)+args)) - f0)/epsilon
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py", line 281, in function_wrapper
    return function(*(wrapper_args + args))
  File "geosolver/solver/numeric_solver.py", line 62, in func
    return sum(evaluate(atom, variable_handler.vector_to_dict(vector)).norm for atom in atoms)
  File "geosolver/solver/numeric_solver.py", line 62, in <genexpr>
    return sum(evaluate(atom, variable_handler.vector_to_dict(vector)).norm for atom in atoms)
  File "geosolver/solver/variable_handler.py", line 117, in vector_to_dict
    out = dict(zip(variables.keys(), vector))
  File "/home/alvaroh/geosolver/geosolver/run.py", line 158, in handler
    raise Exception("Timeout")
Exception: Timeout
oint_8:point,$point_5:point)),Degree())), Equals(90(),Div(MeasureOf(Angle($point_3:point,$point_7:point,$point_6:point)),Degree())), PointLiesOnLine($point_9:point,Line($point_3:point,$point_5:point)), PointLiesOnLine($point_5:point,Line($point_1:point,$point_9:point)), Equals($x:number,LengthOf(Line($point_0:point,$point_3:point))), PointLiesOnLine($point_8:point,Line($point_4:point,$point_12:point)), IsRightTriangle(Triangle($point_7:point,$point_2:point,$point_0:point)), PointLiesOnLine($point_2:point,Line($point_6:point,$point_7:point)), IsRightTriangle(Triangle($point_9:point,$point_3:point,$point_1:point)), PointLiesOnLine($point_0:point,Line($point_3:point,$point_7:point)), PointLiesOnLine($point_4:point,Line($point_6:point,$point_12:point)), Equals(90(),Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_7:point)),Degree())), PointLiesOnLine($point_4:point,Line($point_6:point,$point_10:point)), PointLiesOnLine($point_10:point,Line($point_1:point,$point_9:point)), PointLiesOnLine($point_10:point,Line($point_1:point,$point_11:point)), Is(ValueOf(Add(Pow($x:number,2()),Pow($y:number,2()))),$What:number), PointLiesOnLine($point_11:point,Line($point_5:point,$point_10:point)), Equals(90(),Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_2:point)),Degree())), PointLiesOnLine($point_11:point,Line($point_1:point,$point_5:point)), IsRightTriangle(Triangle($point_2:point,$point_4:point,$point_8:point)), PointLiesOnLine($point_9:point,Line($point_3:point,$point_10:point)), Ge(180,90()), IsRightTriangle(Triangle($point_8:point,$point_5:point,$point_2:point)), PointLiesOnLine($point_5:point,Line($point_3:point,$point_11:point)), Equals(Sqrt(10()),LengthOf(Line($point_2:point,$point_6:point))), Equals(90(),Div(MeasureOf(Angle($point_7:point,$point_6:point,$point_10:point)),Degree())), IsRightTriangle(Triangle($point_8:point,$point_5:point,$point_4:point)), PointLiesOnLine($point_11:point,Line($point_3:point,$point_10:point)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_4:point)), PointLiesOnLine($point_10:point,Line($point_1:point,$point_5:point)), PointLiesOnLine($point_5:point,Line($point_3:point,$point_10:point)), PointLiesOnLine($point_11:point,Line($point_1:point,$point_9:point)), PointLiesOnLine($point_10:point,Line($point_1:point,$point_3:point)), PointLiesOnLine($point_5:point,Line($point_9:point,$point_11:point)), IsRightTriangle(Triangle($point_5:point,$point_3:point,$point_0:point)), Equals(2(),LengthOf(Line($point_1:point,$point_4:point))), PointLiesOnLine($point_11:point,Line($point_9:point,$point_10:point)), IsRightTriangle(Triangle($point_5:point,$point_4:point,$point_1:point)), Equals(Sqrt(7()),LengthOf(Line($point_6:point,$point_8:point))), IsRightTriangle(Triangle($point_0:point,$point_2:point,$point_5:point)), PointLiesOnLine($point_12:point,Line($point_1:point,$point_4:point)), PointLiesOnLine($point_11:point,Line($point_1:point,$point_3:point)), Equals(Sqrt(3()),LengthOf(Line($point_0:point,$point_7:point))), IsRightTriangle(Triangle($point_2:point,$point_6:point,$point_8:point)), IsRightTriangle(Triangle($point_2:point,$point_4:point,$point_5:point)), Equals(Sqrt(6()),LengthOf(Line($point_1:point,$point_5:point)))])
Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
2/55 complete, 1 correct, 0 penalized, 1 error
--------------------------------------------------------------------------------
id: 1030
full unit_test entry
WWWWWWW opt_model
3.85, Is@6[is](ValueOf@8[value]($@v_0:number@10[@v_0]), $What:number@5[what])
5.78, IsQuad@1[quadrilateral]($PQRS:quad@2[PQRS])

f and t: Add(Pow($a:number,2()),Pow($b:number,2())) Add@10[@v_0](Pow@10[@v_0]($a:number@10[@v_0], 2@10[@v_0]), Pow@10[@v_0]($b:number@10[@v_0], 2@10[@v_0]))
local entities: []
completed formulas:
Is(ValueOf($@v_0:number),$What:number)
IsQuad($PQRS:quad)

Is(ValueOf(Add(Pow($a:number,2()),Pow($b:number,2()))),$What:number) None None
Equals($a:number,LengthOf(Line($point_1:point,$point_2:point))) None None
Ge(180,90()) TV(norm=0.000, conf=1.00) [180, 90.0]
Equals($b:number,LengthOf(Line($point_1:point,$point_3:point))) None None
Equals(2(),LengthOf(Line($point_0:point,$point_3:point))) TV(norm=48.083, conf=0.00) [2.0, 50.083184789236682]
Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_3:point)),Degree())) TV(norm=2.082, conf=0.98) [90.0, 87.9177617278985]
Equals(3(),LengthOf(Line($point_0:point,$point_2:point))) TV(norm=149.123, conf=0.00) [3.0, 152.12251280131358]
Equals(90(),Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_2:point)),Degree())) TV(norm=3.093, conf=0.97) [90.0, 86.90747947130146]
Solving...
Given formulas: set([Is(ValueOf(Add(Pow($a:number,2()),Pow($b:number,2()))),$What:number), Equals($a:number,LengthOf(Line($point_1:point,$point_2:point))), Ge(180,90()), Equals($b:number,LengthOf(Line($point_1:point,$point_3:point))), Equals(2(),LengthOf(Line($point_0:point,$point_3:point))), Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_3:point)),Degree())), Equals(3(),LengthOf(Line($point_0:point,$point_2:point))), Equals(90(),Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_2:point)),Degree()))])
iteration 1:
    nfev: 70631
     fun: 2.4735395660613335e-06
       x: array([  2.53658324,  13.00000266,   2.56237162,  -0.84915622,
        -1.14174565,   2.43929586,  -1.26885066,  -2.79250242,   1.14373145])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5422
     nit: 100
Equals(13.000002659655681,8())
13.0000026597
Equals(13.000002659655681,10())
13.0000026597
Equals(13.000002659655681,11())
13.0000026597
Equals(13.000002659655681,12())
13.0000026597
Equals(13.000002659655681,13())
13.0000026597
65.01 seconds
ans: {1: TV(norm=5.000, conf=0.52), 2: TV(norm=3.000, conf=0.74), 3: TV(norm=2.000, conf=0.83), 4: TV(norm=1.000, conf=0.92), 5: TV(norm=0.000, conf=1.00)}
idx 5, answeri: 5.0
Correct for multiple choice: index: 5 value: TV(norm=0.000, conf=1.00), golden: 5.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
3/55 complete, 2 correct, 0 penalized, 1 error
--------------------------------------------------------------------------------
id: 1031
full unit_test entry
WWWWWWW opt_model
2.89, PointLiesOnLine@7:8[lies_on]($O:point@6[O], $AB:line@10[AB])
3.85, IsPoint@5[point]($O:point@6[O])
4.77, IsLine@9[line]($AB:line@10[AB])

completed formulas:
PointLiesOnLine($O:point,$AB:line)
IsPoint($O:point)
IsLine($AB:line)

3.87, Is@1[is](ValueOf@3[value]($x:number@5[x]), $What:number@0[What])

completed formulas:
Is(ValueOf($x:number),$What:number)

Equals(Div($x:number,2()),Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_2:point)),Degree())) None None
Equals(Div($x:number,3()),Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_4:point)),Degree())) None None
Ge(180,Div($x:number,3())) None None
PointLiesOnLine($point_0:point,Line($point_2:point,$point_6:point)) TV(norm=0.012, conf=1.00) [point(x=129.15070734455057, y=81.347542962105678), line(a=point(x=221.0, y=82.0), b=point(x=0.0, y=82.0))]
PointLiesOnLine($point_7:point,Line($point_0:point,$point_5:point)) TV(norm=0.068, conf=0.98) [point(x=114.0, y=76.0), line(a=point(x=129.15070734455057, y=81.347542962105678), b=point(x=12.0, y=32.0))]
Ge(180,Div($x:number,2())) None None
Ge(180,Div($x:number,4())) None None
Is(ValueOf($x:number),$What:number) None None
Ge(180,Div($x:number,6())) None None
PointLiesOnLine($point_7:point,Line($point_0:point,$point_1:point)) TV(norm=0.009, conf=1.00) [point(x=114.0, y=76.0), line(a=point(x=129.15070734455057, y=81.347542962105678), b=point(x=59.0, y=56.0))]
Equals(Div($x:number,4()),Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_3:point)),Degree())) None None
Equals(Div($x:number,6()),Div(MeasureOf(Angle($point_7:point,$point_1:point,$point_5:point)),Degree())) None None
Solving...
Given formulas: set([Equals(Div($x:number,2()),Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_2:point)),Degree())ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
ERROR:root:failed to ground variable: $bisector:bisector
), Equals(Div($x:number,3()),Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_4:point)),Degree())), Ge(180,Div($x:number,3())), PointLiesOnLine($point_0:point,Line($point_2:point,$point_6:point)), PointLiesOnLine($point_7:point,Line($point_0:point,$point_5:point)), Ge(180,Div($x:number,2())), Ge(180,Div($x:number,4())), Is(ValueOf($x:number),$What:number), Ge(180,Div($x:number,6())), PointLiesOnLine($point_7:point,Line($point_0:point,$point_1:point)), Equals(Div($x:number,4()),Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_3:point)),Degree())), Equals(Div($x:number,6()),Div(MeasureOf(Angle($point_7:point,$point_1:point,$point_5:point)),Degree()))])
iteration 1:
    nfev: 120458
     fun: 0.00047910073005175136
       x: array([ 66.93949423, -91.91779787,  34.31089807, -66.48937488,
        20.82226508, -12.91248042,  21.48864143, -27.1954099 ,
         0.63995841, -15.2599999 ,  -5.22707038,  66.93948193,
        28.95581274, -31.56512736, -12.93594829, -91.85307035])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 6207
     nit: 100
Equals(66.939494234969871,90())
66.939494235
Equals(66.939494234969871,120())
66.939494235
Equals(66.939494234969871,144())
66.939494235
Equals(66.939494234969871,156())
66.939494235
Equals(66.939494234969871,168())
66.939494235
149.12 seconds
ans: {1: TV(norm=23.061, conf=0.71), 2: TV(norm=53.061, conf=0.43), 3: TV(norm=77.061, conf=0.27), 4: TV(norm=89.061, conf=0.20), 5: TV(norm=101.061, conf=0.14)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
4/55 complete, 2 correct, 0 penalized, 1 error
--------------------------------------------------------------------------------
id: 1032
full unit_test entry
WWWWWWW opt_model
2.36, Is@10[is]($D:point@16[D], $point:point@15[point])
4.32, IsAngle@8[angle]($BAC:angle@9[BAC])
6.27, IsTriangle@1[triangle]($ABC:triangle@2[ABC])
8.12, Perpendicular@11[perpendicular]($bisector:bisector@6[bisector], $BC:line@13[BC])

completed formulas:
IsAngle($BAC:angle)
IsTriangle($ABC:triangle)
Is($D:point,$point:point)
BisectsAngle($bisector:line,$angle:angle)
Perpendicular($bisector:line,$BC:line)

3.91, Is@8[is](MeasureOf@10[measure]($BAC:angle@13[BAC]), $What:number@7[what])
4.87, IsAngle@12[angle]($BAC:angle@13[BAC])

f and t: Equals($AB:number,6()) Equals@1[@s_0]($AB:number@1[@s_0], 6@1[@s_0])
local entities: [{'content': {'span': [1, 2], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'AB', 'name': 'AB'}}, 'coords': [[146.0, 65.0], [238.68, 21.97]], 'sentence_number': 1}]
f and t: Equals($BD:number,3()) Equals@4[@s_1]($BD:number@4[@s_1], 3@4[@s_1])
local entities: [{'content': {'span': [4, 5], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'BD', 'name': 'BD'}}, 'coords': [[238.68, 21.97], [239.48, 65.99]], 'sentence_number': 1}]
completed formulas:
Is(MeasureOf($BAC:angle),$What:number)
IsAngle($BAC:angle)

Is($point_3:point,$point_3:point) TV(norm=0.000, conf=1.00) [point(x=93.483752860411897, y=44.994508009153321), point(x=93.483752860411897, y=44.994508009153321)]
Equals(LengthOf(Line($point_1:point,$point_0:point)),6()) TV(norm=96.184, conf=0.00) [102.18417795433662, 6.0]
Is(MeasureOf(Angle($point_0:point,$point_1:point,$point_2:point)),$What:number) None None
PointLiesOnLine($point_3:point,Line($point_0:point,$point_2:point)) TV(norm=0.007, conf=1.00) [point(x=93.483752860411897, y=44.994508009153321), line(a=point(x=92.680259779489504, y=0.96541307959522271), b=point(x=93.99275194695042, y=92.329632199861209))]
Equals(LengthOf(Line($point_0:point,$point_3:point)),3()) TV(norm=41.036, conf=0.00) [44.03642584778116, 3.0]
BisectsAngle(Line($point_1:point,$point_3:point),Angle($point_2:point,$point_1:point,$point_0:point)) TV(norm=0.019, conf=1.00) [line(a=point(x=0.0, y=44.0), b=point(x=93.483752860411897, y=44.994508009153321)), angle(a=point(x=93.99275194695042, y=92.329632199861209), b=point(x=0.0, y=44.0), c=point(x=92.680259779489504, y=0.96541307959522271))]
Ge(180,90()) TV(norm=0.000, conf=1.00) [180, 90.0]
Perpendicular(Line($point_1:point,$point_3:point),Line($point_0:point,$point_2:point)) TV(norm=0.025, conf=0.98) [line(a=point(x=0.0, y=44.0), b=point(x=93.483752860411897, y=44.994508009153321)), line(a=point(x=92.680259779489504, y=0.96541307959522271), b=point(x=93.99275194695042, y=92.329632199861209))]
Equals(90(),Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_0:point)),Degree())) TV(norm=1.655, conf=0.98) [90.0, 88.34501081820135]
Solving...
Given formulas: set([Is($point_3:point,$point_3:point), Equals(LengthOf(Line($point_1:point,$point_0:point)),6()), Is(MeasureOf(Angle($point_0:point,$point_1:point,$point_2:point)),$What:number), PointLiesOnLine($point_3:point,Line($point_0:point,$point_2:point)), Equals(LengthOf(Line($point_0:point,$point_3:point)),3()), BisectsAngle(Line($point_1:point,$point_3:point),Angle($point_2:point,$point_1:point,$point_0:point)), Ge(180,90()), Perpendicular(Line($point_1:point,$point_3:point),Line($point_0:point,$point_2:point)), Equals(90(),Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_0:point)),Degree()))])
iteration 1:
    nfev: 40755
     fun: 9.6276246575044411e-07
       x: array([ 0.40736979, -4.75796695,  0.40603526, -2.64763947,  1.04719771,
        0.46974982,  3.35202202])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 3746
     nit: 100
Equals(1.0471977100772432,Mul(15(),Degree()))
1.04719771008
Equals(1.0471977100772432,Mul(30(),Degree()))
1.04719771008
Equals(1.0471977100772432,Mul(45(),Degree()))
1.04719771008
Equals(1.0471977100772432,Mul(60(),Degree()))
1.04719771008
Equals(1.0471977100772432,Mul(75(),Degree()))
1.04719771008
44.95 seconds
ans: {1: TV(norm=0.785, conf=0.00), 2: TV(norm=0.524, conf=0.33), 3: TV(norm=0.262, conf=0.71), 4: TV(norm=0.000, conf=1.00), 5: TV(norm=0.262, conf=0.78)}
idx 4, answeri: 4.0
Correct for multiple choice: index: 4 value: TV(norm=0.000, conf=1.00), golden: 4.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
5/55 complete, 3 correct, 0 penalized, 1 error
--------------------------------------------------------------------------------
id: 1035
full unit_test entry
WWWWWWW opt_model
0.32, IsPoint@10[point]($point:point@10[point])
0.64, IsLine@6[lines]($lines:line@6[lines])
No legal next available.

completed formulas:
IsPoint($point:point)
IsLine($lines:line)

3.87, Is@1[is](ValueOf@3[value]($y:number@5[y]), $What:number@0[What])

completed formulas:
Is(ValueOf($y:number),$What:number)

Equals($y:number,Div(MeasureOf(Angle($point_4:point,$point_1:point,$point_3:point)),Degree())) None None
Ge(180,50()) TV(norm=0.000, conf=1.00) [180, 50.0]
PointLiesOnLine($point_1:point,Line($point_4:point,$point_6:point)) TV(norm=0.004, conf=1.00) [point(x=103.85859129457685, y=100.73519740768197), line(a=point(x=0.0, y=145.0), b=point(x=210.0, y=56.0))]
PointLiesOnLine($point_1:point,Line($point_0:point,$point_2:point)) TV(norm=0.005, conf=1.00) [point(x=103.85859129457685, y=100.73519740768197), line(a=point(x=77.0, y=189.0), b=point(x=134.0, y=0.0))]
Equals(50(),Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_6:point)),Degree())) TV(norm=0.488, conf=0.99) [50.0, 50.488204765906715]
PointLiesOnLine($point_1:point,Line($point_3:point,$point_5:point)) TV(norm=0.005, conf=1.00) [point(x=103.85859129457685, y=100.73519740768197), line(a=point(x=31.0, y=35.0), b=point(x=177.0, y=166.0))]
Ge(180,$y:number) None None
Equals($y:number,Div(MeasureOf(Angle($point_5:point,$point_1:point,$point_0:point)),Degree())) None None
Is(ValueOf($y:number),$What:number) None None
Solving...
Given formulas: set([Equals($y:number,Div(MeasureOf(Angle($point_4:point,$point_1:point,$point_3:point)),Degree())), Ge(180,50()), PointLiesOnLine($point_1:point,Line($point_4:point,$point_6:point)), PointLiesOnLine($point_1:point,Line($point_0:point,$point_2:point)), Equals(50(ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
ERROR:root:failed to ground variable: $tangent:tangent
),Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_6:point)),Degree())), PointLiesOnLine($point_1:point,Line($point_3:point,$point_5:point)), Ge(180,$y:number), Equals($y:number,Div(MeasureOf(Angle($point_5:point,$point_1:point,$point_0:point)),Degree())), Is(ValueOf($y:number),$What:number)])
iteration 1:
    nfev: 59893
     fun: 2.2689311480138006
       x: array([  76.24600286,   68.1666141 ,  -12.51751119,   80.23625361,
         20.39610032,   24.71497933,  179.99996085,  138.9917281 ,
        124.35067081,  179.99996001,   96.36930742,  107.52911725,
        -39.59571127,  -36.26841235])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 3303
     nit: 100
iteration 2:
    nfev: 75426
     fun: 1.224601448690521e-06
       x: array([  20.76335398,  -19.81345453,  -51.44894959,   51.24095586,
       -118.68948675,   10.25246279,   65.00000786,  -40.67525208,
        -40.88697927,   65.00000818,  201.41399055,   44.28064911,
         93.02001789,    4.97066397])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4326
     nit: 100
Equals(65.000007860047148,65())
65.00000786
Equals(65.000007860047148,70())
65.00000786
Equals(65.000007860047148,75())
65.00000786
Equals(65.000007860047148,80())
65.00000786
Equals(65.000007860047148,85())
65.00000786
125.35 seconds
ans: {1: TV(norm=0.000, conf=1.00), 2: TV(norm=5.000, conf=0.93), 3: TV(norm=10.000, conf=0.86), 4: TV(norm=15.000, conf=0.79), 5: TV(norm=20.000, conf=0.73)}
idx 1, answeri: 1.0
Correct for multiple choice: index: 1 value: TV(norm=0.000, conf=1.00), golden: 1.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
6/55 complete, 4 correct, 0 penalized, 1 error
--------------------------------------------------------------------------------
id: 1037
full unit_test entry
WWWWWWW opt_model
2.86, IsCenterOf@8[center]($P:point@9[P], $circle:circle@6[circle])
4.72, Equals@7[has](RadiusOf@11[radius]($circle:circle@6[circle]), $r:number@12[r])

completed formulas:
IsCenterOf($P:point,$circle:circle)
Equals(RadiusOf($circle:circle),$r:number)

cc tree: CC@2[and]($AB:line@1[AB], $AC:line@3[AC]) 1.0
2.95, Tangent@5[tangent]($AB:line@1[AB], $circle:circle@8[circle])
4.48, IsLine@0[Lines]($AC:line@3[AC])

completed formulas:
Tangent({$AB:line,$AC:line},$circle:circle)
IsLine({$AC:line,$AB:line})

4.64, Equals@14[equals](MeasureOf@10[measure]($PMC:angle@13[PMC]), MeasureOf@16[measure]($MPC:angle@19[MPC]))
8.53, Is@22[is](LengthOf@24[length]($PA:line@33[PA]), $What:number@21[what])
11.34, IsMidpointOf@4[midpoint]($M:point@1[M], $segment:line@6[segment])
13.66, Is@2[is]($segment:line@32[segment], $AC:line@7[AC])
15.03, IsAngle@18[angle]($r:angle@29[r])
15.99, IsAngle@12[angle]($PMC:angle@13[PMC])

completed formulas:
Equals(MeasureOf($PMC:angle),MeasureOf($MPC:angle))
IsAngle($PMC:angle)
IsAngle($r:angle)
Is($segment:line,$AC:line)
Is(LengthOf($PA:line),$What:number)
IsMidpointOf($M:point,$segment:line)

PointLiesOnLine($point_2:point,Line($point_1:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=125.21075432560966, y=144.38014478056627), line(a=point(x=0.0, y=145.0), b=point(x=202.0, y=144.0))]
PointLiesOnCircle($point_10:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=1.558, conf=0.98) [point(x=172.36116088086013, y=144.14672692633238), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_2:point)) TV(norm=0.044, conf=0.99) [point(x=84.306594603001798, y=145.78808616533166), line(a=point(x=0.0, y=145.0), b=point(x=125.21075432560966, y=144.38014478056627))]
Is(LengthOf(Line($point_0:point,$point_1:point)),$What:number) None None
PointLiesOnLine($point_2:point,Line($point_7:point,$point_8:point)) TV(norm=0.029, conf=0.99) [point(x=125.21075432560966, y=144.38014478056627), line(a=point(x=202.0, y=144.0), b=point(x=84.306594603001798, y=145.78808616533166))]
Is(Line($point_1:point,$point_4:point),Line($point_1:point,$point_4:point)) TV(norm=0.000, conf=1.00) [line(a=point(x=0.0, y=145.0), b=point(x=150.98620432694619, y=146.6964951928164)), line(a=point(x=0.0, y=145.0), b=point(x=150.98620432694619, y=146.6964951928164))]
PointLiesOnLine($point_9:point,Line($point_0:point,$point_1:point)) TV(norm=0.006, conf=1.00) [point(x=90.0336289195739, y=108.27575662491063), line(a=point(x=149.6525467022077, y=84.3662353438732), b=point(x=0.0, y=145.0))]
PointLiesOnCircle($point_2:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=2.410, conf=0.96) [point(x=125.21075432560966, y=144.38014478056627), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
PointLiesOnCircle($point_9:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=1.845, conf=0.97) [point(x=90.0336289195739, y=108.27575662491063), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
IsCenterOf($point_0:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=0.000, conf=1.00) [point(x=149.6525467022077, y=84.3662353438732), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
Equals(90(),Div(MeasureOf(Angle($point_6:point,$point_4:point,$point_10:point)),Degree())) TV(norm=6.808, conf=0.92) [90.0, 83.1920402082273]
PointLiesOnLine($point_4:point,Line($point_1:point,$point_10:point)) TV(norm=0.130, conf=0.96) [point(x=150.98620432694619, y=146.6964951928164), line(a=point(x=0.0, y=145.0), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnLine($point_0:point,Line($point_3:point,$point_7:point)) TV(norm=0.037, conf=0.99) [point(x=149.6525467022077, y=84.3662353438732), line(a=point(x=108.1156863113722, y=40.404056734973977), b=point(x=202.0, y=144.0))]
Equals(RadiusOf(Circle($point_0:point,$radius_0_0:number)),$r:number) None None
Equals(90(),Div(MeasureOf(Angle($point_6:point,$point_3:point,$point_0:point)),Degree())) TV(norm=0.797, conf=0.99) [90.0, 89.20306010843461]
Tangent(Line($point_1:point,$point_4:point),Circle($point_0:point,$radius_0_0:number)) TV(norm=0.079, conf=1.00) [line(a=point(x=0.0, y=145.0), b=point(x=150.98620432694619, y=146.6964951928164)), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
PointLiesOnLine($point_2:point,Line($point_4:point,$point_8:point)) TV(norm=0.124, conf=0.96) [point(x=125.21075432560966, y=144.38014478056627), line(a=point(x=150.98620432694619, y=146.6964951928164), b=point(x=84.306594603001798, y=145.78808616533166))]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_10:point)) TV(norm=0.028, conf=0.99) [point(x=84.306594603001798, y=145.78808616533166), line(a=point(x=0.0, y=145.0), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnLine($point_0:point,Line($point_4:point,$point_6:point)) TV(norm=0.038, conf=0.99) [point(x=149.6525467022077, y=84.3662353438732), line(a=point(x=150.98620432694619, y=146.6964951928164), b=point(x=151.0, y=1.0))]
PointLiesOnLine($point_4:point,Line($point_1:point,$point_7:point)) TV(norm=0.064, conf=0.98) [point(x=150.98620432694619, y=146.6964951928164), line(a=point(x=0.0, y=145.0), b=point(x=202.0, y=144.0))]
Ge(180,90()) TV(norm=0.000, conf=1.00) [180, 90.0]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=172.36116088086013, y=144.14672692633238), line(a=point(x=0.0, y=145.0), b=point(x=202.0, y=144.0))]
PointLiesOnLine($point_2:point,Line($point_1:point,$point_10:point)) TV(norm=0.000, conf=1.00) [point(x=125.21075432560966, y=144.38014478056627), line(a=point(x=0.0, y=145.0), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnLine($point_4:point,Line($point_2:point,$point_10:point)) TV(norm=0.208, conf=0.93) [point(x=150.98620432694619, y=146.6964951928164), line(a=point(x=125.21075432560966, y=144.38014478056627), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnLine($point_10:point,Line($point_2:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=172.36116088086013, y=144.14672692633238), line(a=point(x=125.21075432560966, y=144.38014478056627), b=point(x=202.0, y=144.0))]
PointLiesOnLine($point_3:point,Line($point_1:point,$point_6:point)) TV(norm=0.026, conf=0.99) [point(x=108.1156863113722, y=40.404056734973977), line(a=point(x=0.0, y=145.0), b=point(x=151.0, y=1.0))]
IsMidpointOf($point_8:point,Line($point_1:point,$point_10:point)) TV(norm=1.894, conf=0.96) [point(x=84.306594603001798, y=145.78808616533166), line(a=point(x=0.0, y=145.0), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnCircle($point_4:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=0.045, conf=1.00) [point(x=150.98620432694619, y=146.6964951928164), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
PointLiesOnCircle($point_5:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=2.299, conf=0.96) [point(x=102.631229588233, y=128.79132328047956), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
PointLiesOnLine($point_4:point,Line($point_8:point,$point_10:point)) TV(norm=0.132, conf=0.96) [point(x=150.98620432694619, y=146.6964951928164), line(a=point(x=84.306594603001798, y=145.78808616533166), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnLine($point_10:point,Line($point_7:point,$point_8:point)) TV(norm=0.014, conf=1.00) [point(x=172.36116088086013, y=144.14672692633238), line(a=point(x=202.0, y=144.0), b=point(x=84.306594603001798, y=145.78808616533166))]
PointLiesOnCircle($point_3:point,Circle($point_0:point,$radius_0_0:number)) TV(norm=1.909, conf=0.97) [point(x=108.1156863113722, y=40.404056734973977), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
PointLiesOnLine($point_4:point,Line($point_7:point,$point_8:point)) TV(norm=0.066, conf=0.98) [point(x=150.98620432694619, y=146.6964951928164), line(a=point(x=202.0, y=144.0), b=point(x=84.306594603001798, y=145.78808616533166))]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_4:point)) TV(norm=0.004, conf=1.00) [point(x=84.306594603001798, y=145.78808616533166), line(a=point(x=0.0, y=145.0), b=point(x=150.98620432694619, y=146.6964951928164))]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_7:point)) TV(norm=0.025, conf=0.99) [point(x=84.306594603001798, y=145.78808616533166), line(a=point(x=0.0, y=145.0), b=point(x=202.0, y=144.0))]
PointLiesOnLine($point_10:point,Line($point_4:point,$point_7:point)) TV(norm=0.114, conf=0.96) [point(x=172.36116088086013, y=144.14672692633238), line(a=point(x=150.98620432694619, y=146.6964951928164), b=point(x=202.0, y=144.0))]
PointLiesOnLine($point_2:point,Line($point_8:point,$point_10:point)) TV(norm=0.029, conf=0.99) [point(x=125.21075432560966, y=144.38014478056627), line(a=point(x=84.306594603001798, y=145.78808616533166), b=point(x=172.36116088086013, y=144.14672692633238))]
PointLiesOnLine($point_2:point,Line($point_1:point,$point_4:point)) TV(norm=0.095, conf=0.97) [point(x=125.21075432560966, y=144.38014478056627), line(a=point(x=0.0, y=145.0), b=point(x=150.98620432694619, y=146.6964951928164))]
Tangent(Line($point_1:point,$point_3:point),Circle($point_0:point,$radius_0_0:number)) TV(norm=1.913, conf=0.97) [line(a=point(x=0.0, y=145.0), b=point(x=108.1156863113722, y=40.404056734973977)), circle(center=point(x=149.6525467022077, y=84.3662353438732), radius=62.389904)]
Equals(MeasureOf(Angle($point_0:point,$point_8:point,$point_4:point)),MeasureOf(Angle($point_4:point,$point_0:point,$point_8:point))) TV(norm=0.070, conf=0.91) [0.76807566155464002, 0.83773668049824068]
PointLiesOnLine($point_5:point,Line($point_0:point,$point_8:point)) TV(norm=0.009, conf=1.00) [point(x=102.631229588233, y=128.79132328047956), line(a=point(x=149.6525467022077, y=84.3662353438732), b=point(x=84.306594603001798, y=145.78808616533166))]
PointLiesOnLine($point_4:point,Line($point_2:point,$point_7:point)) TV(norm=0.142, conf=0.95) [point(x=150.98620432694619, y=146.6964951928164), line(a=point(x=125.21075432560966, y=144.38014478056627), b=point(x=202.0, y=144.0))]
Solving...
Given formulas: set([PointLiesOnLine($point_2:point,Line($pointERROR:root:1037
ERROR:root:Timeout
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 382, in _full_unit_test
    ans = solve(reduced_formulas, choice_formulas, assignment=None)#core_parse.variable_assignment)
  File "geosolver/solver/solve.py", line 41, in solve
    ns.solve()
  File "geosolver/solver/numeric_solver.py", line 29, in solve
    self.assignment, self.confidence = find_assignment(self.variable_handler, self.atoms, self.max_num_resets, self.tol)
  File "geosolver/solver/numeric_solver.py", line 69, in find_assignment
    result = basinhopping(func, init, minimizer_kwargs=minimizer_kwargs)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 576, in basinhopping
    new_global_min = bh.one_cycle()
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 121, in one_cycle
    xtrial, energy_trial, accept = self._monte_carlo_step()
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 72, in _monte_carlo_step
    minres = self.minimizer(x_after_step)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_basinhopping.py", line 243, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/_minimize.py", line 388, in minimize
    constraints, **options)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py", line 374, in _minimize_slsqp
    g = append(fprime(x),0.0)
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py", line 281, in function_wrapper
    return function(*(wrapper_args + args))
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py", line 62, in approx_jacobian
    jac[i] = (func(*((x0+dx,)+args)) - f0)/epsilon
  File "/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py", line 281, in function_wrapper
    return function(*(wrapper_args + args))
  File "geosolver/solver/numeric_solver.py", line 62, in func
    return sum(evaluate(atom, variable_handler.vector_to_dict(vector)).norm for atom in atoms)
  File "geosolver/solver/numeric_solver.py", line 62, in <genexpr>
    return sum(evaluate(atom, variable_handler.vector_to_dict(vector)).norm for atom in atoms)
  File "geosolver/ontology/ontology_semantics.py", line 500, in evaluate
    evaluated_args.append(evaluate(arg, assignment))
  File "geosolver/ontology/ontology_semantics.py", line 483, in evaluate
    if not formula.is_grounded(assignment.keys()):
  File "geosolver/ontology/ontology_definitions.py", line 287, in is_grounded
    return all(not isinstance(child, Node) or child.is_grounded(ids) for child in self.children)
  File "geosolver/ontology/ontology_definitions.py", line 287, in <genexpr>
    return all(not isinstance(child, Node) or child.is_grounded(ids) for child in self.children)
  File "geosolver/ontology/ontology_definitions.py", line 287, in is_grounded
    return all(not isinstance(child, Node) or child.is_grounded(ids) for child in self.children)
  File "geosolver/ontology/ontology_definitions.py", line 287, in <genexpr>
    return all(not isinstance(child, Node) or child.is_grounded(ids) for child in self.children)
  File "geosolver/ontology/ontology_definitions.py", line 287, in is_grounded
    return all(not isinstance(child, Node) or child.is_grounded(ids) for child in self.children)
  File "geosolver/ontology/ontology_definitions.py", line 287, in <genexpr>
    return all(not isinstance(child, Node) or child.is_grounded(ids) for child in self.children)
  File "geosolver/ontology/ontology_definitions.py", line 283, in is_grounded
    if self.is_leaf():
  File "geosolver/ontology/ontology_definitions.py", line 93, in is_leaf
    return len(self.children) == 0
  File "/home/alvaroh/geosolver/geosolver/run.py", line 158, in handler
    raise Exception("Timeout")
Exception: Timeout
_1:point,$point_7:point)), PointLiesOnCircle($point_10:point,Circle($point_0:point,$radius_0_0:number)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_2:point)), Is(LengthOf(Line($point_0:point,$point_1:point)),$What:number), PointLiesOnLine($point_2:point,Line($point_7:point,$point_8:point)), Is(Line($point_1:point,$point_4:point),Line($point_1:point,$point_4:point)), PointLiesOnLine($point_9:point,Line($point_0:point,$point_1:point)), PointLiesOnCircle($point_2:point,Circle($point_0:point,$radius_0_0:number)), PointLiesOnCircle($point_9:point,Circle($point_0:point,$radius_0_0:number)), IsCenterOf($point_0:point,Circle($point_0:point,$radius_0_0:number)), Equals(90(),Div(MeasureOf(Angle($point_6:point,$point_4:point,$point_10:point)),Degree())), PointLiesOnLine($point_4:point,Line($point_1:point,$point_10:point)), PointLiesOnLine($point_0:point,Line($point_3:point,$point_7:point)), Equals(RadiusOf(Circle($point_0:point,$radius_0_0:number)),$r:number), Equals(90(),Div(MeasureOf(Angle($point_6:point,$point_3:point,$point_0:point)),Degree())), Tangent(Line($point_1:point,$point_4:point),Circle($point_0:point,$radius_0_0:number)), PointLiesOnLine($point_2:point,Line($point_4:point,$point_8:point)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_10:point)), PointLiesOnLine($point_0:point,Line($point_4:point,$point_6:point)), PointLiesOnLine($point_4:point,Line($point_1:point,$point_7:point)), Ge(180,90()), PointLiesOnLine($point_10:point,Line($point_1:point,$point_7:point)), PointLiesOnLine($point_2:point,Line($point_1:point,$point_10:point)), PointLiesOnLine($point_4:point,Line($point_2:point,$point_10:point)), PointLiesOnLine($point_10:point,Line($point_2:point,$point_7:point)), PointLiesOnLine($point_3:point,Line($point_1:point,$point_6:point)), IsMidpointOf($point_8:point,Line($point_1:point,$point_10:point)), PointLiesOnCircle($point_4:point,Circle($point_0:point,$radius_0_0:number)), PointLiesOnCircle($point_5:point,Circle($point_0:point,$radius_0_0:number)), PointLiesOnLine($point_4:point,Line($point_8:point,$point_10:point)), PointLiesOnLine($point_10:point,Line($point_7:point,$point_8:point)), PointLiesOnCircle($point_3:point,Circle($point_0:point,$radius_0_0:number)), PointLiesOnLine($point_4:point,Line($point_7:point,$point_8:point)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_4:point)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_7:point)), PointLiesOnLine($point_10:point,Line($point_4:point,$point_7:point)), PointLiesOnLine($point_2:point,Line($point_8:point,$point_10:point)), PointLiesOnLine($point_2:point,Line($point_1:point,$point_4:point)), Tangent(Line($point_1:point,$point_3:point),Circle($point_0:point,$radius_0_0:number)), Equals(MeasureOf(Angle($point_0:point,$point_8:point,$point_4:point)),MeasureOf(Angle($point_4:point,$point_0:point,$point_8:point))), PointLiesOnLine($point_5:point,Line($point_0:point,$point_8:point)), PointLiesOnLine($point_4:point,Line($point_2:point,$point_7:point))])
iteration 1:
    nfev: 266317
     fun: 0.0056582529008901705
       x: array([ 49.18641842,  -5.15011242, -38.21668636, -41.16094176,
       -12.81073088, -14.14126019, -17.01237484,  28.23073081,
         9.09958831, -20.3692812 ,   7.44121913,  21.84199856,
       -54.76058877,  18.29984462,  -6.11716743, -19.96220386,
         0.45896367,   0.86507399, -11.93643874, -10.29059195,
        21.84186803,   0.57622135,   1.23645502])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 10046
     nit: 100
Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
7/55 complete, 4 correct, 0 penalized, 2 error
No annotation for image
--------------------------------------------------------------------------------
8/55 complete, 4 correct, 0 penalized, 3 error
No annotation for image
--------------------------------------------------------------------------------
9/55 complete, 4 correct, 0 penalized, 4 error
No annotation for image
--------------------------------------------------------------------------------
10/55 complete, 4 correct, 0 penalized, 5 error
No annotation for image
--------------------------------------------------------------------------------
11/55 complete, 4 correct, 0 penalized, 6 error
No annotation for image
--------------------------------------------------------------------------------
12/55 complete, 4 correct, 0 penalized, 7 error
No annotation for image
--------------------------------------------------------------------------------
13/55 complete, 4 correct, 0 penalized, 8 error
No annotation for image
--------------------------------------------------------------------------------
14/55 complete, 4 correct, 0 penalized, 9 error
No annotation for image
--------------------------------------------------------------------------------
15/55 complete, 4 correct, 0 penalized, 10 error
No annotation for image
--------------------------------------------------------------------------------
16/55 complete, 4 correct, 0 penalized, 11 error
No annotation for image
--------------------------------------------------------------------------------
17/55 complete, 4 correct, 0 penalized, 12 error
No annotation for image
--------------------------------------------------------------------------------
18/55 complete, 4 correct, 0 penalized, 13 error
No annotation for image
--------------------------------------------------------------------------------
19/55 complete, 4 correct, 0 penalized, 14 error
--------------------------------------------------------------------------------
id: 963
full unit_test entry
WWWWWWW opt_model
cc tree: CC@7[and]($l:angle@6[l], $k:angle@8[k]) 1.0
cc tree: CC@7[and]($l:number@6[l], $k:number@8[k]) 1.0
cc tree: CC@7[and]($l:line@6[l], $k:line@8[k]) 1.0
1.95, IsPoint@11[point]($Q:point@12[Q])
3.85, IsLine@5[lines]($l:line@6[l])
4.28, IsLine@5[lines]($k:line@8[k])

completed formulas:
IsLine({$k:line,$l:line})
IsLine({$l:line,$k:line})
IsPoint($Q:point)

3.85, Is@8[is](ValueOf@10[value]($x:number@12[x]), $What:number@7[what])

f and t: Equals($m:number,40()) Equals@1[@s_0]($m:number@1[@s_0], 40@1[@s_0])
local entities: []
f and t: Equals($p:number,25()) Equals@4[@s_1]($p:number@4[@s_1], 25@4[@s_1])
local entities: []
completed formulas:
Is(ValueOf($x:number),$What:number)

PointLiesOnLine($point_1:point,Line($point_0:point,$point_5:point)) TV(norm=0.010, conf=1.00) [point(x=50.64745414056047, y=49.643735377609374), line(a=point(x=1.0, y=91.0), b=point(x=109.0, y=0.0))]
Equals($x:number,Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_3:point)),Degree())) None None
Ge(180,$x:number) None None
PointLiesOnLine($point_1:point,Line($point_3:point,$point_4:point)) TV(norm=0.031, conf=0.99) [point(x=50.64745414056047, y=49.643735377609374), line(a=point(x=108.0, y=96.0), b=point(x=0.0, y=6.0))]
Equals($p:number,Div(MeasureOf(Angle($point_5:point,$point_1:point,$point_2:point)),Degree())) None None
Ge(180,$m:number) None None
Ge(180,$p:number) None None
Equals($m:number,40()) None None
Is(ValueOf($x:number),$What:number) None None
Equals($p:number,25()) None None
Equals($m:number,Div(MeasureOf(Angle($point_0:point,$point_1:point,$point_4:point)),Degree())) None None
Solving...
Given formulas: set([PointLiesOnLine($point_1:point,Line($point_0:point,$point_5:point)), Equals($x:number,Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_3:point)),Degree())), Ge(180,$x:number), PointLiesOnLine($point_1:point,Line($point_3:point,$point_4:point)), Equals($p:number,Div(MeasureOf(Angle($point_5:point,$point_1:point,$point_2:point)),Degree())), Ge(180,$m:number), Ge(180,$p:number), Equals($m:number,40()), Is(ValueOf($x:number),$What:number), Equals($p:number,25()), Equals($m:number,Div(MeasureOf(Angle($point_0:point,$point_1:point,$point_4:point)),Degree()))])
iteration 1:
    nfev: 80837
     fun: 3.403393492630554
       x: array([  1.79999995e+02,   4.00000000e+01,  -1.74284242e+01,
         7.65621742e-02,   2.50000001e+01,   1.39037504e+00,
         2.19192075e+02,  -6.59055517e+01,   4.20ERROR:root:968
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
850435e+01,
         1.79999994e+02,  -8.12834409e+01,  -1.06722713e+01,
        -1.01973572e+02,  -2.15807061e+02])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4520
     nit: 100
iteration 2:
    nfev: 91477
     fun: 1.9082324271835205e-06
       x: array([  14.99996785,   39.99999951,    4.68603705,   17.80826878,
         24.99999994,  224.35689417,  127.17667905,  -73.55616367,
       -129.79731286,   14.99996797,   59.43748695, -321.31233565,
        261.83601991,  -48.17568385])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5226
     nit: 100
Equals(14.999967851348156,15())
14.9999678513
Equals(14.999967851348156,20())
14.9999678513
Equals(14.999967851348156,25())
14.9999678513
Equals(14.999967851348156,40())
14.9999678513
Equals(14.999967851348156,65())
14.9999678513
162.67 seconds
ans: {1: TV(norm=0.000, conf=1.00), 2: TV(norm=5.000, conf=0.71), 3: TV(norm=10.000, conf=0.50), 4: TV(norm=25.000, conf=0.09), 5: TV(norm=50.000, conf=0.00)}
idx 1, answeri: 1.0
Correct for multiple choice: index: 1 value: TV(norm=0.000, conf=1.00), golden: 1.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
20/55 complete, 5 correct, 0 penalized, 14 error
No annotation for image
--------------------------------------------------------------------------------
21/55 complete, 5 correct, 0 penalized, 15 error
No annotation for image
--------------------------------------------------------------------------------
22/55 complete, 5 correct, 0 penalized, 16 error
No annotation for image
--------------------------------------------------------------------------------
23/55 complete, 5 correct, 0 penalized, 17 error
No annotation for image
--------------------------------------------------------------------------------
24/55 complete, 5 correct, 0 penalized, 18 error
--------------------------------------------------------------------------------
id: 968
full unit_test entry
WWWWWWW opt_model
3.32, Is@12[with]($AC:number@17[AC], DiameterOf@16[diameter]($circle:circle@11[circle]))
5.27, IsCenterOf@13[center]($O:point@14[O])
7.22, IsTriangle@5[triangle]($ABC:triangle@6[ABC])
9.08, IsInscribedIn@8[inscribed]($is:quad@7[is], $circle:circle@11[circle])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
25/55 complete, 5 correct, 0 penalized, 19 error
--------------------------------------------------------------------------------
id: 969
full unit_test entry
WWWWWWW opt_model
cc tree: CC@11[and]($AB:number@6[AB], $CD:number@9[CD]) 1.0
cc tree: CC@11[and]($AB:line@6[AB], $CD:line@9[CD]) 1.0
cc tree: CC@11[and]($AB:line@6[AB], $line:line@12[line]) 1.0
1.94, IsLine@8[line]($CD:line@9[CD])
3.85, IsLine@5[line]($AB:line@6[AB])
5.37, IsLine@12[line]($EF:line@13[EF])

completed formulas:
IsLine($EF:line)
IsLine({$CD:line,$AB:line})
IsLine({$AB:line,$line:line,$CD:line})

3.85, Is@18[is](ValueOf@20[value]($x:number@22[x]), $What:number@17[what])

f and t: Equals($w:number,50()) Equals@14[@s_4]($w:number@14[@s_4], 50@14[@s_4])
local entities: []
f and t: Equals($t:number,60()) Equals@7[@s_2]($t:number@7[@s_2], 60@7[@s_2])
local entities: []
f and t: Equals($u:number,45()) Equals@10[@s_3]($u:number@10[@s_3], 45@10[@s_3])
local entities: []
f and t: Equals($r:number,90()) Equals@1[@s_0]($r:number@1[@s_0], 90@1[@s_0])
local entities: []
f and t: Equals($s:number,50()) Equals@4[@s_1]($s:number@4[@s_1], 50@4[@s_1])
local entities: []
completed formulas:
Is(ValueOf($x:number),$What:number)

Equals($u:number,45()) None None
PointLiesOnLine($point_5:point,Line($point_0:point,$point_6:point)) TV(norm=0.015, conf=1.00) [point(x=71.182020174627027, y=89.616160179339943), line(a=point(x=148.67911373923198, y=156.39315958534092), b=point(x=0.66747546046100581, y=30.618139039005925))]
Equals($u:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_6:point)),Degree())) None None
Equals($s:number,Div(MeasureOf(Angle($point_4:point,$point_2:point,$point_3:point)),Degree())) None None
Equals($w:number,50()) None None
Ge(180,$r:number) None None
Ge(180,$u:number) None None
Ge(180,$x:number) None None
Equals($w:number,Div(MeasureOf(Angle($point_2:point,$point_3:point,$point_0:point)),Degree())) None None
PointLiesOnLine($point_5:point,Line($point_1:point,$point_4:point)) TV(norm=0.001, conf=1.00) [point(x=71.182020174627027, y=89.616160179339943), line(a=point(x=0.016663320618363286, y=89.000200762899013), b=point(x=165.14377056887633, y=90.327033380347913))]
Equals($t:number,Div(MeasureOf(Angle($point_1:point,$point_4:point,$point_2:point)),Degree())) None None
Is(ValueOf($x:number),$What:number) None None
PointLiesOnLine($point_5:point,Line($point_2:point,$point_3:point)) TV(norm=0.046, conf=0.99) [point(x=71.182020174627027, y=89.616160179339943), line(a=point(x=115.5, y=3.0), b=point(x=30.999999999999993, y=178.0))]
Equals($x:number,Div(MeasureOf(Angle($point_0:point,$point_6:point,$point_1:point)),Degree())) None None
Ge(180,$w:number) None None
Equals($r:number,Div(MeasureOf(Angle($point_6:point,$point_1:point,$point_4:point)),Degree())) None None
Equals($s:number,50()) None None
Equals($r:number,90()) None None
Ge(180,$s:number) None None
Equals($t:number,60()) None None
Ge(180,$t:number) None None
Solving...
Given formulas: set([Equals($u:number,45()), PointLiesOnLine($point_5:point,Line($point_0:point,$point_6:point)), Equals($u:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_6:point)),Degree())), Equals($s:number,Div(MeasureOf(Angle($point_4:point,$point_2:point,$point_3:point)),Degree())), Equals($w:number,50()), Ge(180,$r:number), Ge(180,$u:number), Ge(180,$x:number), Equals($w:number,Div(MeasureOf(Angle($point_2:point,$point_3:point,$point_0:point)),Degree())), PointLiesOnLine($point_5:point,Line($point_1:point,$point_4:point)), Equals($t:number,Div(MeasureOf(Angle($point_1:point,$point_4:point,$point_2:point)),Degree())), Is(ValueOf($x:number),$What:number), PointLiesOnLine($point_5:point,Line($point_2:point,$point_3:point)), Equals($x:number,Div(MeasureOf(Angle($point_0:point,$point_6:point,$point_1:point)),Degree())), Ge(180,$w:number), Equals($r:number,Div(MeasureOf(Angle($point_6:point,$point_1:point,$point_4:point)),Degree())), Equals($s:number,50()), Equals($r:number,90()), Ge(180,$s:number), Equals($t:number,60()), Ge(180,$t:number)])
iteration 1:
    nfev: 48527
     fun: 251.35095681532806
       x: array([ -529.78311792,  -803.23096028,   328.95425091,  -276.66769138,
         669.41743678,   322.69448657,  -975.11844148,   386.79973956,
         143.52808415,   191.93709695,    90.02045452,    45.95527407,
          60.27136791,    75.13937185, -1040.9940161 ,   191.93756738,
        -208.85655663,  1013.7606473 ,  1089.05897789])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 2107
     nit: 100
iteration 2:
    nfev: 53476
     fun: 248.35140080428562
       x: array([  44.83639478,   37.50210057,  -33.5093265 ,   38.264489  ,
         43.03274824,  -33.33021445,   30.40022773,  -49.99519659,
         97.29606423,  181.25518373,   97.25472239,   45.17856366,
         92.25529273,  100.02000943,   31.63145299,  181.25948083,
         95.07150789,  -59.44461212,   58.30222682])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 2199
     nit: 100
iteration 3:
    nfev: 54799
     fun: 249.00358598396289
       x: array([ 196.9659338 ,   88.1112577 , -295.4181213 ,   88.81747542,
        196.23616087, -300.5579646 ,  -67.1913139 , -279.20286629,
         50.66648584,  181.10399943,   92.89337986,   54.96682536,
        137.91638919,  113.41172196,  -64.59755013,  181.10371359,
        565.5242153 ,  -85.97913383,  178.09160854])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 2312
     nit: 100
Equals(181.25518373047535,45())
181.25518373
Equals(181.25518373047535,50())
181.25518373
Equals(181.255183730ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
ERROR:root:failed to ground variable: $square:square
47535,65())
181.25518373
Equals(181.25518373047535,75())
181.25518373
281.49 seconds
ans: {1: TV(norm=136.255, conf=0.00), 2: TV(norm=131.255, conf=0.00), 3: TV(norm=116.255, conf=0.06), 4: TV(norm=106.255, conf=0.17)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
26/55 complete, 5 correct, 0 penalized, 19 error
No annotation for image
--------------------------------------------------------------------------------
27/55 complete, 5 correct, 0 penalized, 20 error
--------------------------------------------------------------------------------
id: 971
full unit_test entry
WWWWWWW opt_model
3.78, Is@15[with](AreaOf@17[area]($square:square@14[square]), 1@19[1])
6.74, Is@6[is]($CDE:triangle@5[CDE], $triangle:triangle@9[triangle])
8.68, Is@12[is]($ABCE:quad@11[ABCE], $square:square@14[square])
9.60, Equilateral@8[equilateral]($triangle:triangle@9[triangle])

completed formulas:
Is(AreaOf($square:quad),1())
Is($ABCE:quad,$square:quad)
Is($CDE:triangle,$triangle:triangle)
Equilateral($triangle:triangle)
IsSquare($square:quad)

3.90, Is@1[is](PerimeterOf@3[perimeter]($ABCDE:polygon@6[ABCDE]), $What:number@0[What])
4.86, IsPolygon@5[polygon]($ABCDE:polygon@6[ABCDE])

completed formulas:
Is(PerimeterOf($ABCDE:polygon),$What:number)
IsPolygon($ABCDE:polygon)

Is(Triangle($point_0:point,$point_4:point,$point_1:point),Triangle($point_4:point,$point_1:point,$point_0:point)) TV(norm=0.000, conf=1.00) [triangle(a=point(x=52.377149941276265, y=51.040101787811565), b=point(x=95.450686641697871, y=25.99625468164794), c=point(x=53.63797806335343, y=1.4697536162580143)), triangle(a=point(x=95.450686641697871, y=25.99625468164794), b=point(x=53.63797806335343, y=1.4697536162580143), c=point(x=52.377149941276265, y=51.040101787811565))]
Is(Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point),Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point)) TV(norm=0.000, conf=1.00) [quad(a=point(x=52.377149941276265, y=51.040101787811565), b=point(x=53.63797806335343, y=1.4697536162580143), c=point(x=1.9929197572488206, y=0.70150595639469771), d=point(x=1.3337915234822404, y=51.976174112256587)), quad(a=point(x=52.377149941276265, y=51.040101787811565), b=point(x=53.63797806335343, y=1.4697536162580143), c=point(x=1.9929197572488206, y=0.70150595639469771), d=point(x=1.3337915234822404, y=51.976174112256587))]
Is(AreaOf(Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point)),1()) TV(norm=2587.823, conf=0.00) [2588.8232112816422, 1.0]
Is(PerimeterOf(Polygon($point_0:point,$point_4:point,$point_1:point,$point_2:point,$point_3:point)),$What:number) None None
Equilateral(Triangle($point_4:point,$point_1:point,$point_0:point)) TV(norm=1.230, conf=0.97) [triangle(a=point(x=95.450686641697871, y=25.99625468164794), b=point(x=53.63797806335343, y=1.4697536162580143), c=point(x=52.377149941276265, y=51.040101787811565))]
IsSquare(Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point)) TV(norm=0.463, conf=0.96) [quad(a=point(x=52.377149941276265, y=51.040101787811565), b=point(x=53.63797806335343, y=1.4697536162580143), c=point(x=1.9929197572488206, y=0.70150595639469771), d=point(x=1.3337915234822404, y=51.976174112256587))]
Solving...
Given formulas: set([Is(Triangle($point_0:point,$point_4:point,$point_1:point),Triangle($point_4:point,$point_1:point,$point_0:point)), Is(Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point),Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point)), Is(AreaOf(Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point)),1()), Is(PerimeterOf(Polygon($point_0:point,$point_4:point,$point_1:point,$point_2:point,$point_3:point)),$What:number), Equilateral(Triangle($point_4:point,$point_1:point,$point_0:point)), IsSquare(Quad($point_0:point,$point_1:point,$point_2:point,$point_3:point))])
iteration 1:
    nfev: 61588
     fun: 2.3490406639153916e-06
       x: array([-0.92425237,  0.16705024,  1.11718485, -1.23609427,  4.99999609,
       -0.28596098,  1.42902561,  1.14581006, -0.71924751])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4883
     nit: 100
Equals(4.9999960875879541,4())
4.99999608759
Equals(4.9999960875879541,5())
4.99999608759
Equals(4.9999960875879541,6())
4.99999608759
Equals(4.9999960875879541,7())
4.99999608759
Equals(4.9999960875879541,8())
4.99999608759
92.66 seconds
ans: {1: TV(norm=1.000, conf=0.78), 2: TV(norm=0.000, conf=1.00), 3: TV(norm=1.000, conf=0.82), 4: TV(norm=2.000, conf=0.67), 5: TV(norm=3.000, conf=0.54)}
idx 2, answeri: 2.0
Correct for multiple choice: index: 2 value: TV(norm=0.000, conf=1.00), golden: 2.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
28/55 complete, 6 correct, 0 penalized, 20 error
No annotation for image
--------------------------------------------------------------------------------
29/55 complete, 6 correct, 0 penalized, 21 error
--------------------------------------------------------------------------------
id: 973
full unit_test entry
WWWWWWW opt_model
2.34, Is@9[is]($AC:line@23[AC], $line:line@22[line])
4.67, Is@18[is]($AB:line@14[AB], $line:line@13[line])
6.62, IsTriangle@1[triangle]($ABC:triangle@2[ABC])
7.95, IsMidpointOf@11[midpoint]($E:point@8[E], $AC:line@23[AC])
8.95, IsMidpointOf@20[midpoint]($D:point@17[D], $line:line@22[line])

f and t: Equals($AB:number,$AC:number) Equals@5[@s_0]($AB:number@5[@s_0], $AC:number@5[@s_0])
local entities: [{'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'AB', 'name': 'AB'}}, 'coords': [[136.64, 102.5], [221.0, 38.33]], 'sentence_number': 0}, {'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'AC', 'name': 'AC'}}, 'coords': [[136.64, 102.5], [219.0, 166.0]], 'sentence_number': 0}]
completed formulas:
IsMidpointOf($D:point,$line:line)
IsTriangle($ABC:triangle)
IsMidpointOf($E:point,$AC:line)
Is($AC:line,$line:line)
Is($AB:line,$line:line)

2.88, Is@8[is](LengthOf@9[length]($BC:line@10[BC]), $What:number@7[what])

f and t: Equals($AE:number,$x:number) Equals@1[@s_0]($AE:number@1[@s_0], $x:number@1[@s_0])
local entities: [{'content': {'span': [1, 2], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'AE', 'name': 'AE'}}, 'coords': [[136.64, 102.5], [196.01, 56.7]], 'sentence_number': 1}]
f and t: Equals($ED:number,4()) Equals@4[@s_1]($ED:number@4[@s_1], 4@4[@s_1])
local entities: [{'content': {'span': [4, 5], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'ED', 'name': 'ED'}}, 'coords': [[196.01, 56.7], [197.0, 149.6]], 'sentence_number': 1}]
completed formulas:
Is(LengthOf($BC:line),$What:number)

Is(Line($point_1:point,$point_2:point),Line($point_1:point,$point_2:point)) TV(norm=0.000, conf=1.00) [line(a=point(x=0.63832746152419872, y=64.50435750046357), b=point(x=85.0, y=0.3333333333333357)), line(a=point(x=0.63832746152419872, y=64.50435750046357), b=point(x=85.0, y=0.3333333333333357))]
PointLiesOnLine($point_3:point,Line($point_1:point,$point_2:point)) TV(norm=0.023, conf=0.99) [point(x=60.007447864945384, y=18.700099304865937), line(a=point(x=0.63832746152419872, y=64.50435750046357), b=point(x=85.0, y=0.3333333333333357))]
Equals(LengthOf(Line($point_1:point,$point_2:point)),LengthOf(Line($point_1:point,$point_0:point))) TV(norm=1.999, conf=0.98) [105.99439672052215, 103.99587357084921]
Equals(LengthOf(Line($point_1:point,$point_3:point)),$x:number) None None
IsMidpointOf($point_3:point,Line($point_1:point,$point_0:point)) TV(norm=19.364, conf=0.51) [point(x=60.007447864945384, y=18.700099304865937), line(a=point(x=0.63832746152419872, y=64.50435750046357), b=point(x=83.0, y=128.0))]
IsMidpointOf($point_4:point,Line($point_0:point,$point_1:point)) TV(norm=24.565, conf=0.06) [point(x=60.995695364238415, y=111.5953642384106), line(a=point(x=83.0, y=128.0), b=point(x=0.63832746152419872, y=64.50435750046357))]
Equals(LengthOf(Line($point_3:point,$point_4:point)),4()) TV(norm=88.901, conf=0.00) [92.90052142045981, 4.0]
Is(LengthOf(Line($point_2:point,$point_0:point)),$What:number) None None
Is(Line($point_1:point,$point_0:point),Line($point_0:point,$point_1:point)) TV(norm=0.000, conf=1.00) [line(a=point(x=0.63832746152419872, y=64.50435750046357), b=point(x=83.0, y=128.0)), line(a=point(x=83.0, y=128.0), b=point(x=0.63832746152419872, y=64.50435750046357))]
PointLiesOnLine($point_4:point,Line($point_0:point,$point_1:point)) TV(norm=0.022, conf=0.99) [point(x=60.995695364238415, y=111.5953642384106), line(a=point(x=83.0, y=128.0), b=point(x=0.63832746152419872, y=64.50435750046357))]
Solving...
Given formulas: set([Is(Line($point_1:point,$point_2:point),Line($point_1:point,$point_2:point)), PointLiesOnLine($point_3:point,Line($point_1:point,$point_2:point)), Equals(LengthOf(Line($point_1:point,$point_2:point)),LengthOf(Line($point_1:point,$point_0:point))), Equals(LengthOf(Line($point_1:point,$point_3:point)),$x:number), IsMidpointOf($point_3:point,Line($point_1:point,$point_0:point)), IsMidpointOf($point_4:point,Line($point_0:point,$point_1:point)), Equals(LengthOf(Line($point_3:point,$point_4:point)),4()), Is(LengthOf(Line($point_2:point,$point_0:point)),$What:number), Is(Line($point_1:point,$point_0:point),Line($point_0:point,$point_1:point)), PointLiesOnLine($point_4:point,Line($point_0:point,$point_1:point))])
iteration 1:
    nfev: 64685
     fun: 0.11857333550350035
       x: array([  7.95774781,  62.34342637, -26.11282972, -13.01993549,
        31.68114705,  29.68623411, -16.48697051,  33.81547431,
        58.79030264, -33.23329923])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4713
     nit: 100
iteration 2:
    nfev: 63346
     fun: 0.10594004556131331
       x: array([  7.96634057, -44.38184187,  60.59091453,  30.59516109,
       -22.02655264, -24.96310586,  27.87917132,  37.83403506,
       -50.50839326,  55.49896097])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4624
     nit: 100
iteration 3:
    nfev: 62797
     fun: 0.11300797842678301
       x: array([  7.96165451,  61.40681284, -35.37801132, -17.67369884,
        31.18968564,  32.809732  , -14.01645188,  35.47414207,
        65.03729583, -28.29228448])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4570
     nit: 100
Equals(7.9663405662894453,6())
7.96634056629
Equals(7.9663405662894453,8())
7.96634056629
Equals(7.9663405662894453,Mul(2(),$x:number))
7.96634056629
Equals(7.9663405662894453,Mul(4(),$x:number))
7.96634056629
Equals(7.9663405662894453,Mul(4(),Pow($x:number,2())))
7.96634056629
279.40 seconds
ans: {1: TV(norm=1.966, conf=0.72), 2: TV(norm=0.034, conf=1.00), 3: TV(norm=67.702, conf=0.00), 4: TV(norm=143.370, conf=0.00), 5: TV(norm=5717.690, conf=0.00)}
idx 2, answeri: 2.0
Correct for multiple choice: index: 2 value: TV(norm=0.034, conf=1.00), golden: 2.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
30/55 complete, 7 correct, 0 penalized, 21 error
--------------------------------------------------------------------------------
id: 974
full unit_test entry
WWWWWWW opt_model
3.94, Is@12[is](ValueOf@14[value]($z:number@16[z]), $What:number@11[what])

f and t: Equals($x:number,20()) Equals@1[@s_0]($x:number@1[@s_0], 20@1[@s_0])
local entities: []
f and t: Equals($y:number,30()) Equals@4[@s_1]($y:number@4[@s_1], 30@4[@s_1])
local entities: []
completed formulas:
Is(ValueOf($z:number),$What:number)

Ge(180,$z:number) None None
Equals($y:number,Div(MeasureOf(Angle($point_3:point,$point_1:point,$point_2:point)),Degree())) None None
Equals($y:number,30()) None None
Ge(180,$y:number) None None
Is(ValueOf($z:number),$What:number) None None
Equals($x:number,20()) None None
Equals($x:number,Div(MeasureOf(Angle($point_1:point,$point_2:point,$point_0:point)),DegreERROR:root:failed to ground variable: $circles:circles
ERROR:root:failed to ground variable: $circles:circles
ERROR:root:failed to ground variable: $circles:circles
ERROR:root:975
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
ERROR:root:failed to ground variable: $bisectors:bisector
e())) None None
Ge(180,$x:number) None None
Equals($z:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_2:point)),Degree())) None None
Equals($x:number,Div(MeasureOf(Angle($point_0:point,$point_3:point,$point_1:point)),Degree())) None None
Solving...
Given formulas: set([Ge(180,$z:number), Equals($y:number,Div(MeasureOf(Angle($point_3:point,$point_1:point,$point_2:point)),Degree())), Equals($y:number,30()), Ge(180,$y:number), Is(ValueOf($z:number),$What:number), Equals($x:number,20()), Equals($x:number,Div(MeasureOf(Angle($point_1:point,$point_2:point,$point_0:point)),Degree())), Ge(180,$x:number), Equals($z:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_2:point)),Degree())), Equals($x:number,Div(MeasureOf(Angle($point_0:point,$point_3:point,$point_1:point)),Degree()))])
iteration 1:
    nfev: 59177
     fun: 2.0501778088544143e-06
       x: array([  69.99999946,   25.11537264,   69.99999909,   55.12656829,
       -121.14131737,  -31.45431818,   30.00000005,   20.00000017,
         35.20114101,  -56.50280518])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4253
     nit: 100
Equals(69.99999945785126,60())
69.9999994579
Equals(69.99999945785126,70())
69.9999994579
Equals(69.99999945785126,80())
69.9999994579
Equals(69.99999945785126,90())
69.9999994579
Equals(69.99999945785126,100())
69.9999994579
49.88 seconds
ans: {1: TV(norm=10.000, conf=0.85), 2: TV(norm=0.000, conf=1.00), 3: TV(norm=10.000, conf=0.87), 4: TV(norm=20.000, conf=0.75), 5: TV(norm=30.000, conf=0.65)}
idx 2, answeri: 2.0
Correct for multiple choice: index: 2 value: TV(norm=0.000, conf=1.00), golden: 2.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
31/55 complete, 8 correct, 0 penalized, 21 error
--------------------------------------------------------------------------------
id: 975
full unit_test entry
WWWWWWW opt_model
2.68, IsCenterOf@4[center]($O:point@1[O], $circles:circle@7[circles])
3.62, IsPoint@0[Point]($O:point@1[O])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
32/55 complete, 8 correct, 0 penalized, 22 error
--------------------------------------------------------------------------------
id: 977
full unit_test entry
WWWWWWW opt_model
cc tree: CC@8[and]($AM:line@7[AM], $CM:line@10[CM]) 1.0
cc tree: CC@18[and]($BAC:angle@17[BAC], $BCA:angle@20[BCA]) 1.0
cc tree: CC@8[and]($AM:number@7[AM], $CM:number@10[CM]) 1.0
2.96, BisectsAngle@14[bisectors]($AM:line@7[AM], $BAC:angle@17[BAC])
5.29, Is@11[are]($line:line@9[line], $CM:line@10[CM])
7.25, IsAngle@19[angle]($BCA:angle@20[BCA])
9.20, IsTriangle@2[triangle]($ABC:triangle@3[ABC])
10.83, BisectsAngle@14[bisectors]($line:line@6[line], $angle:angle@13[angle])
11.79, IsAngle@16[angle]($BAC:angle@17[BAC])
12.74, Isosceles@1[isosceles]($ABC:triangle@3[ABC])

completed formulas:
IsAngle({$BCA:angle,$BAC:angle})
Is($line:line,{$CM:line,$AM:line})
BisectsAngle({$AM:line,$CM:line},{$BAC:angle,$BCA:angle})
BisectsAngle($line:line,$angle:angle)
IsTriangle($ABC:triangle)
Isosceles($ABC:triangle)
IsAngle({$BAC:angle,$BCA:angle})

3.91, Is@1[is](MeasureOf@3[measure]($AMC:angle@6[AMC]), $What:number@0[What])
4.87, IsAngle@5[angle]($AMC:angle@6[AMC])

completed formulas:
Is(MeasureOf($AMC:angle),$What:number)
IsAngle($AMC:angle)

Ge(180,40()) TV(norm=0.000, conf=1.00) [180, 40.0]
BisectsAngle(Line($point_2:point,$point_0:point),Angle($point_3:point,$point_2:point,$point_1:point)) TV(norm=0.077, conf=0.87) [line(a=point(x=138.28780372729415, y=179.95435244161359), b=point(x=66.0, y=134.5)), angle(a=point(x=0.81461312797947016, y=179.72112211221122), b=point(x=138.28780372729415, y=179.95435244161359), c=point(x=68.502415458937193, y=1.4347826086956559))]
BisectsAngle(Line($point_3:point,$point_0:point),Angle($point_1:point,$point_3:point,$point_2:point)) TV(norm=0.007, conf=0.99) [line(a=point(x=0.8146131279794/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py:62: RuntimeWarning: invalid value encountered in subtract
  jac[i] = (func(*((x0+dx,)+args)) - f0)/epsilon
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:979
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
7016, y=179.72112211221122), b=point(x=66.0, y=134.5)), angle(a=point(x=68.502415458937193, y=1.4347826086956559), b=point(x=0.81461312797947016, y=179.72112211221122), c=point(x=138.28780372729415, y=179.95435244161359))]
Is(Line($point_1:point,$point_2:point),Line($point_2:point,$point_0:point)) TV(norm=inf, conf=0.00) [line(a=point(x=68.502415458937193, y=1.4347826086956559), b=point(x=138.28780372729415, y=179.95435244161359)), line(a=point(x=138.28780372729415, y=179.95435244161359), b=point(x=66.0, y=134.5))]
Isosceles(Triangle($point_2:point,$point_1:point,$point_3:point)) TV(norm=7.225, conf=0.99) [triangle(a=point(x=138.28780372729415, y=179.95435244161359), b=point(x=68.502415458937193, y=1.4347826086956559), c=point(x=0.81461312797947016, y=179.72112211221122))]
Is(Line($point_1:point,$point_2:point),Line($point_3:point,$point_0:point)) TV(norm=inf, conf=0.00) [line(a=point(x=68.502415458937193, y=1.4347826086956559), b=point(x=138.28780372729415, y=179.95435244161359)), line(a=point(x=0.81461312797947016, y=179.72112211221122), b=point(x=66.0, y=134.5))]
Equals(40(),Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_3:point)),Degree())) TV(norm=2.141, conf=0.95) [40.0, 42.140767072519296]
BisectsAngle(Line($point_0:point,$point_3:point),Angle($point_2:point,$point_3:point,$point_1:point)) TV(norm=0.007, conf=1.00) [line(a=point(x=66.0, y=134.5), b=point(x=0.81461312797947016, y=179.72112211221122)), angle(a=point(x=138.28780372729415, y=179.95435244161359), b=point(x=0.81461312797947016, y=179.72112211221122), c=point(x=68.502415458937193, y=1.4347826086956559))]
Is(MeasureOf(Angle($point_2:point,$point_0:point,$point_3:point)),$What:number) None None
Solving...
Given formulas: set([Ge(180,40()), BisectsAngle(Line($point_2:point,$point_0:point),Angle($point_3:point,$point_2:point,$point_1:point)), BisectsAngle(Line($point_3:point,$point_0:point),Angle($point_1:point,$point_3:point,$point_2:point)), Is(Line($point_1:point,$point_2:point),Line($point_2:point,$point_0:point)), Isosceles(Triangle($point_2:point,$point_1:point,$point_3:point)), Is(Line($point_1:point,$point_2:point),Line($point_3:point,$point_0:point)), Equals(40(),Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_3:point)),Degree())), BisectsAngle(Line($point_0:point,$point_3:point),Angle($point_2:point,$point_3:point,$point_1:point)), Is(MeasureOf(Angle($point_2:point,$point_0:point,$point_3:point)),$What:number)])
iteration 1:
    nfev: 192809
     fun: inf
       x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 10201
     nit: 100
iteration 2:
    nfev: 192809
     fun: inf
       x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 10201
     nit: 100
iteration 3:
    nfev: 192809
     fun: inf
       x: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 10201
     nit: 100
Equals(nan,Mul(110(),Degree()))
nan
Equals(nan,Mul(115(),Degree()))
nan
Equals(nan,Mul(120(),Degree()))
nan
Equals(nan,Mul(125(),Degree()))
nan
Equals(nan,Mul(130(),Degree()))
nan
772.15 seconds
ans: {1: TV(norm=inf, conf=0.00), 2: TV(norm=inf, conf=0.00), 3: TV(norm=inf, conf=0.00), 4: TV(norm=inf, conf=0.00), 5: TV(norm=inf, conf=0.00)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
33/55 complete, 8 correct, 0 penalized, 22 error
--------------------------------------------------------------------------------
id: 979
full unit_test entry
WWWWWWW opt_model
1.34, Congruent@11[congruent]($triangles:triangle@8[triangles])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
34/55 complete, 8 correct, 0 penalized, 23 error
-------------------------------------------ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:981
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:failed to ground variable: $integers:numbers
ERROR:root:985
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
ERROR:root:988
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
-------------------------------------
id: 981
full unit_test entry
WWWWWWW opt_model
2.19, Is@9[has]($sides:side@11[sides], $Which:ground@8[which])
3.59, IsPolygon@7[polygon]($is:quad@15[is])
3.91, IsAngle@14[angles]($angles:angle@14[angles])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
35/55 complete, 8 correct, 0 penalized, 24 error
--------------------------------------------------------------------------------
id: 985
full unit_test entry
WWWWWWW opt_model
2.89, PointLiesOnLine@7:8[lies_on]($B:point@6[B], $AC:line@10[AC])
3.84, IsPoint@5[point]($B:point@6[B])
4.77, IsLine@9[line]($AC:line@10[AC])

completed formulas:
PointLiesOnLine($B:point,$AC:line)
IsPoint($B:point)
IsLine($AC:line)

cc tree: CC@2[and]($x:angle@1[x], $y:angle@3[y]) 1.0
cc tree: CC@2[and]($x:number@1[x], $y:number@3[y]) 1.0
cc tree: CC@2[and]($x:line@1[x], $y:line@3[y]) 1.0
2.88, Is@11[is](ValueOf@14[value]($x:number@16[x]), $Which:ground@7[which])
5.72, Is@4[are]($x:number@1[x], $integers:numbers@5[integers])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
36/55 complete, 8 correct, 0 penalized, 25 error
--------------------------------------------------------------------------------
id: 988
full unit_test entry
WWWWWWW opt_model
cc tree: CC@9[and]($P:point@5[P], $R:point@10[R]) 1.0
cc tree: CC@9[and]($P:point@5[P], $Q:point@7[Q]) 1.0
2.33, PointLiesOnLine@11[lie]($R:point@10[R], $line:line@15[line])
2.41, PointLiesOnLine@12[on]($R:point@10[R], $line:line@15[line])

completed formulas:
PointLiesOnLine({$R:point,$P:point},$line:line)

2.94, IsCenterOf@3[center]($P:point@0[P], $circle:circle@7[circle])
5.88, IsCenterOf@13[center]($Q:point@10[Q], $circle:circle@17[circle])
6.22, Is@11[is]($circle:circle@7[circle], $circle:circle@17[circle])
6.57, Is@1[is]($circle:circle@17[circle], $circle:circle@7[circle])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
37/55 complete, 8 correct, 0 penalized, 26 error
--------------------------------------------------------------------------------
id: 989
full unit_test entry
WWWWWWW opt_model
cc tree: CC@10[and]($R:point@9[R], $S:point@11[S]) 1.0
1.52, IsCenterOf@8[centers]($R:point@9[R])
1.93, IsCenterOf@8[centers]($S:point@11[S])

completed formulas:
IsCenterOf($R:point,$twod:twod)
IsCenterOf($S:point,$twod:twod)

No legal next available.
f and t: Equals($RS:number,12()) Equals@1[@s_0]($RS:number@1[@s_0], 12@1[@s_0])
local entities: [{'content': {'span': [1, 2], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'RS', 'name': 'RS'}}, 'coords': [[199.73, 69.25], [250.5, 60.5]], 'sentence_number': 1}]
completed formulas:

PointLiesOnLine($point_4:point,Line($point_1:point,$point_3:point)) TV(norm=0.055, conf=0.98) [point(x=158.5, y=48.5), line(a=point(x=212.75759073828181, y=50.975952251093034), b=point(x=0.0, y=50.0))]
PointLiesOnCircle($point_2:point,Circle($point_4:point,$radius_4_0:number)) TV(norm=2.440, conf=0.95) [point(x=107.73219358575817, y=57.251065108191554), circle(center=point(x=158.5, y=48.5), radius=49.076469)]
IsCenterOf($point_2:point,Circle($point_4:point,$radius_4_0:number)) TV(norm=29.759, conf=0.62) [point(x=107.73219358575817, y=57.251065108191554), circle(center=point(x=158.5, y=48.5), radius=49.076469)]
PointLiesOnCircle($point_1:point,Circle($point_4:point,$radius_4_0:number)) TV(norm=5.238, conf=0.90) [point(x=212.75759073828181, y=50.975952251093034), circle(center=point(x=158.5, y=48.5), radius=49.076469)]
IsCenterOf($point_4:point,Circle($point_4:point,$radius_4_0:number)) TV(norm=0.000, conf=1.00) [point(x=158.5, y=48.5), circle(center=point(x=158.5, y=48.5), radius=49.076469)]
Equals(LengthOf(Line($point_2:point,$point_4:point)),12()) TV(noERROR:root:989
ERROR:root:No query formula.
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 382, in _full_unit_test
    ans = solve(reduced_formulas, choice_formulas, assignment=None)#core_parse.variable_assignment)
  File "geosolver/solver/solve.py", line 32, in solve
    raise Exception("No query formula.")
Exception: No query formula.
rm=39.517, conf=0.00) [51.516514911645004, 12.0]
Solving...
Given formulas: set([PointLiesOnLine($point_4:point,Line($point_1:point,$point_3:point)), PointLiesOnCircle($point_2:point,Circle($point_4:point,$radius_4_0:number)), IsCenterOf($point_2:point,Circle($point_4:point,$radius_4_0:number)), PointLiesOnCircle($point_1:point,Circle($point_4:point,$radius_4_0:number)), IsCenterOf($point_4:point,Circle($point_4:point,$radius_4_0:number)), Equals(LengthOf(Line($point_2:point,$point_4:point)),12())])
Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
38/55 complete, 8 correct, 0 penalized, 27 error
--------------------------------------------------------------------------------
id: 990
full unit_test entry
WWWWWWW opt_model
No legal next available.
f and t: Parallel($l:line,$m:line) Parallel@5[@s_0]($temp:line@5[@s_0], $temp:line@5[@s_0])
local entities: [{'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'l', 'name': 'temp'}}, 'coords': [[102.0, 71.0], [255.0, 71.0]], 'sentence_number': 0}, {'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'm', 'name': 'temp'}}, 'coords': [[102.0, 152.0], [255.0, 152.0]], 'sentence_number': 0}]
completed formulas:

1.16, Equals@5[equal]($Which:ground@0[Which], 180@6[180])

completed formulas:
Equals($Which:ground,180())

PointLiesOnLine($point_3:point,Line($point_4:point,$point_5:point)) TV(norm=0.002, conf=1.00) [point(x=74.408845873584667, y=50.922331009844612), line(a=point(x=0.0, y=51.0), b=point(x=153.0, y=51.0))]
Equals($k:number,Div(MeasureOf(Angle($point_3:point,$point_7:point,$point_8:point)),Degree())) None None
PointLiesOnLine($point_3:point,Line($point_6:point,$point_10:point)) TV(norm=0.002, conf=1.00) [point(x=74.408845873584667, y=50.922331009844612), line(a=point(x=52.0, y=9.0), b=point(x=117.98013245033111, y=132.0))]
Equals($t:number,Div(MeasureOf(Angle($point_5:point,$point_3:point,$point_10:point)),Degree())) None None
PointLiesOnLine($point_7:point,Line($point_3:point,$point_9:point)) TV(norm=0.001, conf=1.00) [point(x=35.049689440993788, y=132.0), line(a=point(x=74.408845873584667, y=50.922331009844612), b=point(x=21.0, y=161.0))]
Ge(180,$r:number) None None
Equals($p:number,Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_9:point)),Degree())) None None
Ge(180,$n:number) None None
PointLiesOnLine($point_3:point,Line($point_1:point,$point_6:point)) TV(norm=0.002, conf=1.00) [point(x=74.408845873584667, y=50.922331009844612), line(a=point(x=133.0, y=160.0), b=point(x=52.0, y=9.0))]
PointLiesOnLine($point_7:point,Line($point_2:point,$point_8:point)) TV(norm=0.000, conf=1.00) [point(x=35.049689440993788, y=132.0), line(a=point(x=0.0, y=132.0), b=point(x=153.0, y=132.0))]
Ge(180,$p:number) None None
Equals($n:number,Div(MeasureOf(Angle($point_2:point,$point_10:point,$point_3:point)),Degree())) None None
Ge(180,$k:number) None None
PointLiesOnLine($point_3:point,Line($point_0:point,$point_7:point)) TV(norm=0.002, conf=1.00) [point(x=74.408845873584667, y=50.922331009844612), line(a=point(x=99.0, y=0.0), b=point(x=35.049689440993788, y=132.0))]
PointLiesOnLine($point_10:point,Line($point_2:point,$point_8:point)) TV(norm=0.000, conf=1.00) [point(x=117.98013245033111, y=132.0), line(a=point(x=0.0, y=132.0), b=point(x=153.0, y=132.0))]
Parallel(Line($point_4:point,$point_5:point),Line($point_2:point,$point_8:point)) TV(norm=0.000, conf=1.00) [line(a=point(x=0.0, y=51.0), b=point(x=153.0, y=51.0)), line(a=point(x=0.0, y=132.0), b=point(x=153.0, y=132.0))]
PointLiesOnLine($point_10:point,Line($point_7:point,$point_8:point)) TV(norm=0.000, conf=1.00) [point(x=117.98013245033111, y=132.0), line(a=point(x=35.049689440993788, y=132.0), b=point(x=153.0, y=132.0))]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_3:point)) TV(norm=0.001, conf=1.00) [point(x=117.98013245033111, y=132.0), line(a=point(x=133.0, y=160.0), b=point(x=74.408845873584667, y=50.922331009844612))]
Ge(180,$s:number) None None
PointLiesOnLine($point_7:point,Line($point_0:point,$point_9:point)) TV(norm=0.000, conf=1.00) [point(x=35.049689440993788, y=132.0), line(a=point(x=99.0, y=0.0), b=point(x=21.0, y=161.0))]
PointLiesOnLine($point_10:point,Line($point_1:point,$point_6:point)) TV(norm=0.000, conf=1.00) [point(x=117.98013245033111, y=132.0), line(a=point(x=133.0, y=160.0), b=point(x=52.0, y=9.0))]
Equals($Which:ground,180()) None None
PointLiesOnLine($point_3:point,Line($point_0:point,$point_9:point)) TV(norm=0.002, conf=1.00) [point(x=74.408845873584667, y=50.922331009844612), line(a=point(x=99.0, y=0.0), b=point(x=21.0, y=161.0))]
PointLiesOnLine($point_7:point,Line($point_2:point,$point_10:point)) TV(norm=0.000, conf=1.00) [point(x=35.049689440993788, y=132.0), line(a=point(x=0.0, y=132.0), b=point(x=117.98013245033111, y=132.0))]
Equals($s:number,Div(MeasureOf(Angle($point_4:point,$point_3:point,$point_6:point)),Degree())) None None
Equals($r:number,Div(MeasureOf(Angle($point_7:point,$point_3:point,$point_4:point)),Degree())) None None
Ge(180,$t:number) None None
Solving...
Given formulas: set([PointLiesOnLine($point_3:point,Line($point_4:point,$point_5:point)), Equals($k:number,Div(MeasureOf(Angle($point_3:point,$point_7:point,$point_8:point)),Degree())), PointLiesOnLine($point_3:point,Line($point_6:point,$point_10:point)), Equals($t:number,Div(MeasureOf(Angle($point_5:point,$point_3:point,$point_10:point)),Degree())), PointLiesOnLine($point_7:point,Line($point_3:point,$point_9:point)), Ge(180,$r:number), Equals($p:number,Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_9:point)),Degree())), Ge(180,$n:number), PointLiesOnLine($point_3:point,Line($point_1:point,$point_6:point)), PointLiesOnLine($point_7:point,Line($point_2:point,$point_8:point)), Ge(180,$p:number), Equals($n:number,Div(MeasureOf(Angle($point_2:point,$point_10:point,$point_3:point)),Degree())), Ge(180,$k:number), PointLiesOnLine($point_3:point,Line($point_0:point,$point_7:point)), PointLiesOnLine($point_10:point,Line($point_2:point,$point_8:point)), Parallel(Line($point_4:point,$point_5:point),Line($point_2:point,$point_8:point)), PointLiesOnLine($point_10:point,Line($point_7:point,$point_8:point)), PointLiesOnLine($point_10:point,Line($point_1:point,$point_3:point)), Ge(180,$s:number), PointLiesOnLine($point_7:point,Line($point_0:point,$point_9:point)), PointLiesOnLine($point_10:point,Line($point_1:point,$point_6:point)), Equals($Which:ground,180()), PointLiesOnLine($point_3:point,Line($point_0:point,$point_9:point)), PointLiesOnLine($point_7:point,Line($point_2:point,$point_10:point)), Equals($s:number,Div(MeasureOf(Angle($point_4:point,$point_3:point,$point_6:point)),Degree())), Equals($r:number,Div(MeasureOf(Angle($point_7:point,$point_3:point,$point_4:point)),Degree())), Ge(180,$t:number)])
iteration 1:
    nfev: 128016
     fun: 19.193255843490952
       x: array([ -36.4246419 , -317.74039927, -360.20245634,  -20.57127157,
        230.59602874, -383.19616756,  -81.34498511,   -9.19637947,
         10.69531563,  178.90178578,  367.87882114,  135.1423748 ,
        317.83975566,   18.50520117,    4.69313678,   39.21061353,
         96.7019004 , -229.88247351,  179.99852764,  139.43912389,
        179.99993601,   63.2747481 ,  179.99981395,  179.20049129,
         39.34683534,  -15.57500419])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4238
     nit: 100
iteration 2:
    nfev: 157432
     fun: 16.943239123861762
       x: array([ -9.02868597e+01,   4.99562404e+02,  -1.89452739e+02,
        -3.01590470e+02,  -2.85231657e+02,   2.09235075e+02,
         6.65413053e+00,  -9.68156878e-01,   2.68233943e+02,
         1.68683382e+02,  -9.53466653e+01,  -1.38780009e+02,
         1.02345409e+02,   1.62874042e+02,   1.03369659e+02,
         1.50228066e+02,  -1.52614938e+02,  -1.04826590e+02,
         1.79988229e+02,   1.79998915e+02,   1.79977235e+02,
         1.79990711e+02,   4.47755139e+01,   9.17159160e+01,
         1.94725454e-01,   2.08429697e-01])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5199
     nit: 100
iteration 3:
    nfev: 161460
     fun: 9.5380634296770523
       x: array([  2.62613175e+02,   2.27867659e+02,  -1.30838547e+02,
         1.62976413e+02,  -1.10848968e+01,   9.28601386e+00,
        -1.49529993e+00,   2.31193680e+00,  -3.80967118e+01,
         3.10340038e+01,   6.91224230e+01,  -5.52912118e+01,
         1.24845900e+02,  -1.54628755e+02,  -2.14379953e-01,
         5.38135233e-01,  -1.50834996e+02,  -1.46183886e+02,
         9.98319104e+01,   1.79992099e+02,   1.79998681e+02,
         1.79999122e+02,   1.79999238e+02,   8.47219310e+01,
        -1.10710304e+01,   9.27485175e+00])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5353
     nit: 100
1350.96 seconds
ans: {1: TV(norm=279.823, conf=0.13), 2: TV(norm=279.830, conf=0.13), 3: TV(norm=359.990, conf=0.00), 4: TV(norm=264.713, conf=0.15), 5: TV(norm=264.720, conf=0.15)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
39/55 complete, 8 correct, 0 penalized, 27 error
--------------------------------------------------------------------------------
id: 993
full unit_test entry
WWWWWWW opt_model
1.29, IntersectAt@7[intersect]($lines:line@6[lines], $point:point@10[point])

completed formulas:
IntersectAt($lines:line,$point:point)

3.85, Is@8[is](ValueOf@10[value]($a:number@12[a]), $What:number@7[what])

f and t: Equals($f:number,85()) Equals@1[@s_0]($f:number@1[@s_0], 85@1[@s_0])
local entities: []
f and t: Equals($c:number,25()) Equals@4[@s_1]($c:number@4[@s_1], 25@4[@s_1])
local entities: []
completed formulas:
Is(ValueOf($a:number),$What:number)

Is(ValueOf($a:number),$What:number) None None
Ge(180,$g:number) None None
PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)) TV(norm=0.021, conf=0.99) [point(x=93.045223093849231, y=81.236561593376152), line(a=point(x=116.0, y=169.0), b=point(x=70.0, y=0.0))]
Ge(180,$c:number) None None
Equals($f:number,85()) None None
Equals($b:number,Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_2:point)),Degree())) None None
Equals($c:number,Div(MeasureOf(Angle($point_2:point,$point_0:point,$point_6:point)),Degree())) None None
Equals($c:number,25()) None None
Equals($f:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_5:point)),Degree())) None None
Equals($g:number,Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_1:point)),Degree())) None None
Ge(180,$a:number) None None
PointLiesOnLine($point_0:point,Line($point_1:point,$point_6:point)) TV(norm=0.005, conf=1.00) [point(x=93.045223093849231, y=81.236561593376152), line(a=point(x=0.0, y=81.0), b=point(x=176.0, y=81.0))]
Equals($a:number,Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_4:point)),Degree())) None None
Ge(180,$b:number) None None
Ge(180,$e:number) None None
Equals($e:number,Div(MeasureOf(Angle($point_6:point,$point_0:point,$point_3:point)),Degree())) None None
PointLiesOnLine($point_0:point,Line($point_2:point,$point_5:point)) TV(norm=0.006, conf=1.00) [point(x=93.045223093849231, y=81.236561593376152), line(a=point(x=172.0, y=60.0), b=point(x=3.0, y=106.0))]
Ge(180,$f:number) None None
Solving...
Given formulas: set([Is(ValueOf($a:number),$What:number), Ge(180,$g:number), PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)), Ge(180,$c:number), Equals($f:number,85()), Equals($b:number,Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_2:point)),Degree())), Equals($c:number,Div(MeasureOf(Angle($point_2:point,$point_0:point,$point_6:point)),Degree())), Equals($c:number,25()), Equals($f:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_5:point)),Degree())), Equals($g:number,Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_1:point)),Degree())), Ge(180,$a:number), PointLiesOnLine($point_0:point,Line($point_1:point,$point_6:point)), Equals($a:number,Div(MeasureOf(AngERROR:root:995
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
le($point_1:point,$point_0:point,$point_4:point)),Degree())), Ge(180,$b:number), Ge(180,$e:number), Equals($e:number,Div(MeasureOf(Angle($point_6:point,$point_0:point,$point_3:point)),Degree())), PointLiesOnLine($point_0:point,Line($point_2:point,$point_5:point)), Ge(180,$f:number)])
iteration 1:
    nfev: 136099
     fun: 6.2833150633418384
       x: array([  7.00020431e+01,   7.00020426e+01,   1.79998726e+02,
         1.79999343e+02,   1.79999926e+02,   8.50000090e+01,
         2.20904750e+01,  -8.73159585e+01,   2.50000006e+01,
         1.87712151e+02,  -8.68498298e-02,  -2.30821738e+02,
        -2.42082135e+00,   4.67629037e+01,  -1.13573036e+01,
        -5.18114365e+00,   7.32187545e+00,   3.21343810e+00,
         7.15968118e+00])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5857
     nit: 100
iteration 2:
    nfev: 125780
     fun: 6.283374637322277
       x: array([  70.00233706,   70.00234032,  179.99893595,  179.99993533,
        179.99877821,   84.99999058,  130.80881072,  -54.93654717,
         25.00004069,  112.11070729,  -64.14828782,    4.51880727,
        -21.09823322,   38.63103347,  -88.65279355, -115.54075353,
         -3.06673052,  128.96737822,   41.986497  ])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5450
     nit: 100
iteration 3:
    nfev: 122265
     fun: 5.2360005366014724
       x: array([ 179.99990486,  179.99990491,   91.48562581,  158.51463641,
        179.99983703,   85.00000004,  137.10339631,   53.72239198,
         24.99999977,   78.9928108 ,  -52.90312879,   82.83390612,
         58.93699502,  -98.09186286, -107.36676817,  -87.56472612,
         80.80890934,   65.45105564,  -70.73721301])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 5302
     nit: 100
Equals(179.99990490746811,60())
179.999904907
Equals(179.99990490746811,65())
179.999904907
Equals(179.99990490746811,70())
179.999904907
Equals(179.99990490746811,75())
179.999904907
Equals(179.99990490746811,85())
179.999904907
649.72 seconds
ans: {1: TV(norm=120.000, conf=0.00), 2: TV(norm=115.000, conf=0.06), 3: TV(norm=110.000, conf=0.12), 4: TV(norm=105.000, conf=0.18), 5: TV(norm=95.000, conf=0.28)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
40/55 complete, 8 correct, 0 penalized, 27 error
--------------------------------------------------------------------------------
id: 995
full unit_test entry
WWWWWWW opt_model
cc tree: CC@7[and]($ABC:triangle@6[ABC], $CDE:triangle@8[CDE]) 1.0
3.35, Equals@15[has]($AE:number@14[AE], LengthOf@16[length]($line:line@12[line]))
5.30, IsTriangle@5[triangles]($ABC:triangle@6[ABC])
6.88, Equilateral@10[equilateral]($CDE:triangle@8[CDE])
8.20, Is@9[are]($line:line@12[line], $segment:line@13[segment])
8.80, Equals@15[has]($AE:number@14[AE], 25@17[25])

completed formulas:
Equals($AE:number,25())
Equilateral({$CDE:triangle,$ABC:triangle})
Is($line:line,$segment:line)
Equals($AE:number,LengthOf($line:line))
IsTriangle({$ABC:triangle,$CDE:triangle})

4.76, Is@1[is](SumOf@3[sum](PerimeterOf@6[perimeters]($triangles:triangle@10[triangles])), $What:number@0[What])
5.65, Two@9[two]($triangles:triangle@10[triangles])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
41/55 complete, 8 correct, 0 penalized, 28 error
--------------------------------------------------------------------------------
id: 997
full unit_test entry
WWWWWWW opt_model
1.85, IsGreatest@11[greatest]($Which:ground@5[which])

completed formulas:
IsGreatest($Which:ground)

PointLiesOnLine($point_3:point,Line($point_1:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=33.880597014925371, y=106.0), line(a=point(x=0.0, y=106.0), b=point(x=156.0, y=106.0))]
Equals($c:number,Div(MeasureOf(Angle($point_0:point,$point_6:point,$point_5:point)),Degree())) None None
Equals(60(),Div(MeasureOf(Angle($point_6:point,$point_3:point,$point_4:point)),Degree())) TV(norm=2.619, conf=0.96) [60.0, 57.38104930045529]
PointLiesOnLine($point_3:point,Line($point_5:point,$point_6:point)) TV(norm=0.042, conf=0.99) [point(x=33.880597014925371, y=106.0), line(a=point(x=17.0, y=135.0), b=point(x=87.0, y=23.0))]
Equals(70(),Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_6:point)),Degree())) TV(norm=0.604, conf=0.99) [70.0, 70.60378865475249]
PointLiesOnLine($point_3:point,Line($point_2:point,$point_5:point)) TV(norm=0.000, conf=1.00) [point(x=33.880597014925371, y=106.0), line(a=point(x=95.0, y=1.0), b=point(x=17.0, y=135.0))]
IsGreatest($Which:ground) None None
Ge(180,$e:number) None None
Equals($d:number,Div(MeasureOf(Angle($point_2:point,$point_6:point,$point_0:point)),Degree())) None None
Ge(180,60()) TV(norm=0.000, conf=1.00) [180, 60.0]
Equals($b:number,Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_2:point)),Degree())) None None
Ge(180,70()) TV(norm=0.000, conf=1.00) [180, 70.0]
PointLiesOnLine($point_3:point,Line($point_0:point,$point_1:point)) TV(norm=0.006, conf=1.00) [point(x=33.880597014925371, y=106.0), line(a=point(x=115.82738095238095, y=106.5), b=point(x=0.0, y=106.0))]
PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)) TV(norm=0.019, conf=0.99) [point(x=115.82738095238095, y=106.5), line(a=point(x=33.880597014925371, y=106.0), b=point(x=156.0, y=106.0))]
Ge(180,$c:number) None None
PointLiesOnLine($point_0:point,Line($point_1:point,$point_4:point)) TV(norm=0.017, conf=0.99) [point(x=115.82738095238095, y=106.5), line(a=point(x=0.0, y=106.0), b=point(x=156.0, y=106.0))]
Ge(180,$a:number) None None
Ge(180,$d:number) None None
Equals($a:number,Div(MeasureOf(Angle($point_5:point,$point_3:point,$point_1:point)),Degree())) None None
Ge(180,$b:number) None None
Equals($e:number,Div(MeasureOf(Angle($point_6:point,$point_0:point,$point_4:point)),Degree())) None None
Solving...
Given formulas: set([PointLiesOnLine($point_3:point,Line($point_1:point,$point_4:point)), Equals($c:number,Div(MeasureOf(Angle($point_0:point,$point_6:point,$point_5:point)),Degree())), Equals(60(),Div(MeasureOf(Angle($point_6:point,$point_3:point,$point_4:point)),Degree())), PointLiesOnLine($point_3:point,Line($point_5:point,$point_6:point)), Equals(70(),Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_6:point)),Degree())), PointLiesOnLine($point_3:point,Line($point_2:point,$point_5:point)), IsGreatest($Which:ground), Ge(180,$e:number), Equals($d:number,Div(MeasureOf(Angle($point_2:point,$point_6:point,$point_0:point)),Degree())), Ge(180,60()), Equals($b:number,Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_2:point)),Degree())), Ge(180,70()), PointLiesOnLine($point_3:point,Line($point_0:point,$point_1:point)), PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)), Ge(180,$c:number), PointLiesOnLine($point_0:point,Line($point_1:point,$point_4:point)), Ge(180,$a:number), Ge(180,$d:number), Equals($a:number,Div(MeasureOf(Angle($point_5:point,$point_3:point,$point_1:point)),Degree())), Ge(180,$b:number), Equals($e:number,Div(MeasureOf(Angle($point_6:point,$point_0:point,$point_4:point)),Degree()))])
iteration 1:
    nfev: 127249
     fun: 3.2269555663155813e-06
       x: array([  60.00003988,   19.29552649,  -13.12943547,  109.99999822,
        130.00002066,   61.00481502,    5.96682883,   97.07234718,
         49.99998893,    9.41277247,  119.99998878,   38.08064263,
        -52.61102624,   29.23317631,  -40.18787089,   -1.91994628,
        -21.54355486])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 6140
     nit: 100
268.78 seconds
ans: {1: TV(norm=inf, conf=0.00), 2: TV(norm=inf, conf=0.00), 3: TV(norm=inf, conf=0.00), 4: TV(norm=inf, conf=0.00), 5: TV(norm=inf, conf=0.00)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
42/55 complete, 8 correct, 0 penalized, 28 error
--------------------------------------------------------------------------------
id: 1000
full unit_test entry
WWWWWWW opt_model
No legal next available.
f and t: Equals(Add($t:number,$u:number),$What:number) Equals@13[@s_2](Add@13[@s_2]($t:number@13[@s_2], $u:number@13[@s_2]), $What:number@13[@s_2])
local entities: []
f and t: Parallel($l:line,$m:line) Parallel@6[@s_0]($temp:line@6[@s_0], $temp:line@6[@s_0])
local entities: [{'content': {'span': [6, 7], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'l', 'name': 'temp'}}, 'coords': [[85.0, 60.0], [282.0, 60.0]], 'sentence_number': 0}, {'content': {'span': [6, 7], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'm', 'name': 'temp'}}, 'coords': [[84.0, 98.0], [282.0, 98.0]], 'sentence_number': 0}]
f and t: Equals($r:number,91()) Equals@9[@s_1]($r:number@9[@s_1], 91@9[@s_1])
local entities: []
completed formulas:

Equals($u:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_2:point)),Degree())) None None
PointLiesOnLine($point_3:point,Line($point_4:point,$point_5:point)) TV(norm=0.000, conf=1.00) [point(x=102.0, y=33.0), line(a=point(x=1.0, y=33.0), b=point(x=198.0, y=33.0))]
Equals($r:number,91()) None None
PointLiesOnLine($point_3:point,Line($point_6:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=102.0, y=33.0), line(a=point(x=102.0, y=1.0), b=point(x=102.0, y=96.0))]
Equals($r:number,Div(MeasureOf(Angle($point_4:point,$point_3:point,$point_6:point)),Degree())) None None
Ge(180,$r:number) None None
Ge(180,$u:number) None None
PointLiesOnLine($point_0:point,Line($point_1:point,$point_2:point)) TV(norm=0.000, conf=1.00) [point(x=102.0, y=71.0), line(a=point(x=0.0, y=71.0), b=point(x=198.0, y=71.0))]
Equals($s:number,Div(MeasureOf(Angle($point_6:point,$point_3:point,$point_5:point)),Degree())) None None
Ge(180,$s:number) None None
PointLiesOnLine($point_0:point,Line($point_6:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=102.0, y=71.0), line(a=point(x=102.0, y=1.0), b=point(x=102.0, y=96.0))]
PointLiesOnLine($point_0:point,Line($point_3:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=102.0, y=71.0), line(a=point(x=102.0, y=33.0), b=point(x=102.0, y=96.0))]
PointLiesOnLine($point_3:point,Line($point_0:point,$point_6:point)) TV(norm=0.000, conf=1.00) [point(x=102.0, y=33.0), line(a=point(x=102.0, y=71.0), b=point(x=102.0, y=1.0))]
Parallel(Line($point_4:point,$point_5:point),Line($point_1:point,$point_2:point)) TV(norm=0.000, conf=1.00) [line(a=point(x=1.0, y=33.0), b=point(x=198.0, y=33.0)), line(a=point(x=0.0, y=71.0), b=point(x=198.0, y=71.0))]
Equals(Add($t:number,$u:number),$What:number) None None
Equals($t:number,Div(MeasureOf(Angle($point_7:point,$point_0:point,$point_1:point)),Degree())) None None
Ge(180,$t:number) None None
Solving...
Given formulas: set([Equals($u:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_2:point)),Degree())), PointLiesOnLine($point_3:point,Line($point_4:point,$point_5:point)), Equals($r:number,91()), PointLiesOnLine($point_3:point,Line($point_6:point,$point_7:point)), Equals($r:number,Div(MeasureOf(Angle($point_4:point,$point_3:point,$point_6:point)),Degree())), Ge(180,$r:number), Ge(180,$u:number), PointLiesOnLine($point_0:point,Line($point_1:point,$point_2:point)), Equals($s:number,Div(MeasureOf(Angle($point_6:point,$point_3:point,$point_5:point)),Degree())), Ge(180,$s:number), PointLiesOnLine($point_0:point,Line($point_6:point,$point_7:point)), PointLiesOnLine($point_0:point,Line($point_3:point,$point_7:point)), PointLiesOnLine($point_3:point,Line($point_0:point,$point_6:point)), Parallel(Line($point_4:point,$point_5:point),Line($point_1:point,$point_2:point)), Equals(Add($t:number,$u:number),$What:number), Equals($t:number,Div(MeasureOf(Angle($point_7:point,$point_0:point,$point_1:point)),Degree())), Ge(180,$t:number)])
iteration 1:
    nfev: 149812
     fun: 2.8609042348470837e-06
       x: array([-273.03888504, -375.94179179,  -27.98653442,   42.94402785,
        110.39127562,  177.99998513,   64.62467475, -284.39278892,
        190.91830364,   88.99998657,   90.99999995,   89.00001703,
         88.99996764,  -80.06005919,  -55.2850204 ,    5.98962563,
         -7.86182475,  130.48554375,  187.50330207])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 6679
     nit: 100
Equals(177.99998512627698,178())
177.999985126
Equals(177.99998512627698,179())
177.999985126
Equals(177.99998512627698,180())
177.999985126
Equals(177.99998512627698,181())
177.999985126
Equals(177.99998512627698,182())
177.999985126
264.26 seconds
ans: {1: TV(norm=0.000, conf=1.00), 2: TV(norm=1.000, conf=0.99), 3: TV(norm=2.000, conf=0.99), 4: TV(norm=3.000, conf=0.98), 5: TV(norm=4.000, conf=0.98)}
idx 1, answeri: 1.0
Correct for multiple choice: index: 1 value: TV(norm=0.000, conf=1.00), golden: 1.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
43/55 complete, 9 correct, 0 penalized, 28 error
--------------------------------------------------------------------------------
id: 1003
full unit_test entry
WWWWWWW opt_model
1.95, IsTriangle@1[triangle]($PQR:triangle@2[PQR])
No legal next available.

f and t: Equals($PR:number,$QR:number) Equals@5[@s_0]($PR:number@5[@s_0], $QR:number@5[@s_0])
local entities: [{'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'PR', 'name': 'PR'}}, 'coords': [[119.0, 110.0], [266.0, 71.0]], 'sentence_number': 0}, {'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'QR', 'name': 'QR'}}, 'coords': [[119.0, 31.0], [266.0, 71.0]], 'sentence_number': 0}]
completed formulas:
IsTriangle($PQR:triangle)

1.57, True@6[true]($Which:ground@0[Which])
No legal next available.

completed formulas:
True($Which:ground)

Ge(180,$z:number) None None
PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=0.0, y=15.0), line(a=point(x=0.0, y=110.0), b=point(x=0.0, y=1.0))]
Ge(180,$v:number) None None
Equals($z:number,Div(MeasureOf(Angle($point_1:point,$point_2:point,$point_3:point)),Degree())) None None
PointLiesOnLine($point_2:point,Line($point_3:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=0.0, y=94.0), line(a=point(x=0.0, y=110.0), b=point(x=0.0, y=1.0))]
Equals($u:number,Div(MeasureOf(Angle($point_4:point,$point_2:point,$point_1:point)),Degree())) None None
Ge(180,$x:number) None None
PointLiesOnLine($point_2:point,Line($point_0:point,$point_3:point)) TV(norm=0.000, conf=1.00) [point(x=0.0, y=94.0), line(a=point(x=0.0, y=15.0), b=point(x=0.0, y=110.0))]
PointLiesOnLine($point_0:point,Line($point_2:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=0.0, y=15.0), line(a=point(x=0.0, y=94.0), b=point(x=0.0, y=1.0))]
Equals(LengthOf(Line($point_2:point,$point_1:point)),LengthOf(Line($point_0:point,$point_1:point))) TV(norm=0.260, conf=1.00) [152.0855022676389, 152.34500319997372]
True($Which:ground) None None
Ge(180,$y:number) None None
Equals($x:number,Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_0:point)),Degree())) None None
Equals($y:number,Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_1:point)),Degree())) None None
Ge(180,$u:number) None None
Equals($v:number,Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_3:point)),Degree())) None None
Solving...
Given formulas: set([Ge(180,$z:number), PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)), Ge(180,$v:number), Equals($z:number,Div(MeasureOf(Angle($point_1:point,$point_2:point,$point_3:point)),Degree())), PointLiesOnLine($point_2:point,Line($point_3:point,$point_4:point)), Equals($u:number,Div(MeasureOf(Angle($point_4:point,$point_2:point,$point_1:point)),Degree())), Ge(180,$x:number), PointLiesOnLine($point_2:point,Line($point_0:point,$point_3:point)), PointLiesOnLine($point_0:point,Line($point_2:point,$point_4:point)), Equals(LengthOf(Line($point_2:point,$point_1:point)),LengERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
ERROR:root:failed to ground variable: $trapezoid:trapezoid
thOf(Line($point_0:point,$point_1:point))), True($Which:ground), Ge(180,$y:number), Equals($x:number,Div(MeasureOf(Angle($point_2:point,$point_1:point,$point_0:point)),Degree())), Equals($y:number,Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_1:point)),Degree())), Ge(180,$u:number), Equals($v:number,Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_3:point)),Degree()))])
iteration 1:
    nfev: 80613
     fun: 1.3757522681068224e-06
       x: array([  1.40465701e+02,   2.18199453e+01,   3.96588767e+01,
         5.89248087e+00,   1.05042807e-01,  -3.35359618e+01,
         2.60313411e+02,  -2.93246195e+02,   8.89416657e+01,
         9.10583365e+01,   2.11665764e+00,   9.10583225e+01,
         8.89416790e+01])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4839
     nit: 100
131.31 seconds
ans: {1: TV(norm=86.825, conf=0.00), 2: TV(norm=86.825, conf=0.00), 3: TV(norm=88.942, conf=0.00), 4: TV(norm=88.942, conf=0.00), 5: TV(norm=0.000, conf=1.00)}
idx 5, answeri: 5.0
Correct for multiple choice: index: 5 value: TV(norm=0.000, conf=1.00), golden: 5.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
44/55 complete, 10 correct, 0 penalized, 28 error
--------------------------------------------------------------------------------
id: 1004
full unit_test entry
WWWWWWW opt_model
1.89, Is@1[is](PerimeterOf@3[perimeter]($trapezoid:trapezoid@6[trapezoid]), $What:number@0[What])

completed formulas:
Is(PerimeterOf($trapezoid:quad),$What:number)
IsTrapezoid($trapezoid:quad)

Equals(20(),LengthOf(Line($point_0:point,$point_1:point))) TV(norm=90.208, conf=0.00) [20.0, 110.20806538187895]
Equals(15(),LengthOf(Line($point_1:point,$point_3:point))) TV(norm=66.657, conf=0.00) [15.0, 81.657448748353062]
Equals(17(),LengthOf(Line($point_0:point,$point_2:point))) TV(norm=74.258, conf=0.00) [17.0, 91.258156449955635]
Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_3:point,$point_1:point)),Degree())) TV(norm=0.462, conf=0.99) [90.0, 90.4620422595491]
Ge(180,90()) TV(norm=0.000, conf=1.00) [180, 90.0]
IsTrapezoid(Quad($point_2:point,$point_3:point,$point_1:point,$point_0:point)) TV(norm=0.076, conf=0.99) [quad(a=point(x=0.18072289156627619, y=82.333333333333343), b=point(x=153.00401606425703, y=82.333333333333343), c=point(x=153.66250755394407, y=0.67853968931072473), d=point(x=43.462267197760788, y=1.9918182796856456))]
Is(PerimeterOf(Quad($point_2:point,$point_3:point,$point_1:point,$point_0:point)),$What:number) None None
Equals(90(),Div(MeasureOf(Angle($point_3:point,$point_1:point,$point_0:point)),Degree())) TV(norm=1.145, conf=0.99) [90.0, 88.85518464932797]
Solving...
Given formulas: set([Equals(20(),LengthOf(Line($point_0:point,$point_1:point))), Equals(15(),LengthOf(Line($point_1:point,$point_3:point))), Equals(17(),LengthOf(Line($point_0:point,$point_2:point))), Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_3:point,$point_1:point)),Degree())), Ge(180,90()), IsTrapezoid(Quad($point_2:point,$point_3:point,$point_1:point,$point_0:point)), Is(PerimeterOf(Quad($point_2:point,$point_3:point,$point_1:point,$point_0:point)),$What:number), Equals(90(),Div(MeasureOf(Angle($point_3:point,$point_1:point,$point_0:point)),Degree()))])
iteration 1:
    nfev: 45253
     fun: 8.4426253451362987e-05
       x: array([ 20.07656415,  -2.02391382,  16.47406011,  -5.7463405 ,
        79.99993304,  22.01807162,  12.84992499])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 3978
     nit: 100
Equals(79.999933044974554,52())
79.999933045
Equals(79.999933044974554,72())
79.999933045
Equals(79.999933044974554,75())
79.999933045
Equals(79.999933044974554,80())
79.999933045
Equals(79.999933044974554,87())
79.999933045
50.98 seconds
ans: {1: TV(norm=28.000, conf=0.58), 2: TV(norm=8.000, conf=0.89), 3: TV(norm=5.000, conf=0.94), 4: TV(norm=0.000, conf=1.00), 5: TV(norm=7.000, conf=0.92)}
idx 4, answeri: 4.0
Correct for multiple choice: index: 4 value: TV(ERROR:root:failed to ground variable: $circles:circles
ERROR:root:failed to ground variable: $circles:circles
ERROR:root:failed to ground variable: $circles:circles
ERROR:root:1005
ERROR:root:list index out of range
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
IndexError: list index out of range
ERROR:root:1006
ERROR:root:'P'
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
  File "geosolver/grounding/ground_formula.py", line 18, in ground_formulas
    grounded_variable = _ground_variable(match_parse, variable, references)
  File "geosolver/grounding/ground_formula.py", line 148, in _ground_variable
    return match_parse.match_dict[variable_signature.name][0]
KeyError: 'P'
norm=0.000, conf=1.00), golden: 4.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
45/55 complete, 11 correct, 0 penalized, 28 error
--------------------------------------------------------------------------------
id: 1005
full unit_test entry
WWWWWWW opt_model
1.34, IsRadiusNumOf@10[radius](3@11[3])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
46/55 complete, 11 correct, 0 penalized, 29 error
--------------------------------------------------------------------------------
id: 1006
full unit_test entry
WWWWWWW opt_model
No legal next available.
f and t: Equals($AC:number,6()) Equals@5[@s_0]($AC:number@5[@s_0], 6@5[@s_0])
local entities: [{'content': {'span': [5, 6], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'AC', 'name': 'AC'}}, 'coords': [[131.44, 81.33], [248.0, 81.0]], 'sentence_number': 0}]
f and t: Equals($BC:number,3()) Equals@8[@s_1]($BC:number@8[@s_1], 3@8[@s_1])
local entities: [{'content': {'span': [8, 9], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'BC', 'name': 'BC'}}, 'coords': [[218.53, 14.77], [248.0, 81.0]], 'sentence_number': 0}]
completed formulas:

cc tree: CC@8[and]($A:point@7[A], $B:point@9[B]) 1.0
2.90, PointLiesOnLine@2:3[lies_on]($P:point@1[P], $CP:line@13[CP])
5.40, Perpendicular@15[perpendicular]($line:line@12[line], $AB:line@18[AB])
7.72, Is@14[is]($AB:line@5[AB], $line:line@4[line])
9.06, IsPoint@0[Point]($B:point@9[B])
10.02, IsLine@17[line]($AB:line@18[AB])
10.37, IsPoint@0[Point]($A:point@7[A])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
47/55 complete, 11 correct, 0 penalized, 30 error
--------------------------------------------------------------------------------
id: 1011
full unit_test entry
WWWWWWW opt_model
0.31, IsLine@5[lines]($lines:line@5[lines])
No legal next available.

completed formulas:
IsLine($lines:line)

2.67, Not@9[not](Equals@10[equal]($Which:ground@4[which], 90@12[90]))

f and t: Parallel($l:line,$m:line) Parallel@1[@s_0]($temp:line@1[@s_0], $temp:line@1[@s_0])
local entities: [{'content': {'span': [1, 2], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'l', 'name': 'temp'}}, 'coords': [[76.0, 73.0], [292.0, 74.0]], 'sentence_number': 1}, {'content': {'span': [1, 2], 'class': 'TagRule', 'signature': {'class': 'VariableSignature', 'return_type': 'line', 'valence': 0, 'id': 'm', 'name': 'temp'}}, 'coords': [[76.0, 121.0], [292.0, 121.0]], 'sentence_number': 1}]
completed formulas:
Not(Equals($Which:ground,90()))

Ge(180,$v:number) None None
Equals(89(),Div(MeasureOf(Angle($point_9:point,$point_0:point,$point_10:point)),Degree())) TV(norm=0.014, conf=1.00) [89.0, 88.98602127721468]
Ge(180,$r:number) None None
Parallel(Line($point_7:point,$point_11:point),Line($point_9:point,$point_12:point)) TV(norm=0.005, conf=1.00) [line(a=point(x=0.0, y=43.0), b=point(x=216.0, y=44.0)), line(a=point(x=0.0, y=91.0), b=point(x=216.0, y=91.0))]
Not(Equals($Which:ground,90())) None None
Equals(90(),Div(MeasureOf(Angle($point_6:point,$point_5:point,$point_12:point)),Degree())) TV(norm=0.000, conf=1.00) [90.0, 90.0]
PointLiesOnLine($point_8:point,Line($point_2:point,$point_3:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=43.495370370370367), line(a=point(x=107.0, y=0.0), b=point(x=107.0, y=117.0))]
PointLiesOnLine($point_1:point,Line($point_6:point,$point_14:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=43.81018518518519), line(a=point(x=175.0, y=0.0), b=point(x=175.0, y=117.0))]
Equals($v:number,Div(MeasureOf(Angle($point_0:point,$point_5:point,$point_1:point)),Degree())) None None
PointLiesOnLine($point_5:point,Line($point_1:point,$point_14:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=91.0), line(a=point(x=175.0, y=43.81018518518519), b=point(x=175.0, y=117.0))]
PointLiesOnLine($point_5:point,Line($point_0:point,$point_12:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=91.0), line(a=point(x=47.575221238938056, y=91.0), b=point(x=216.0, y=91.0))]
PointLiesOnLine($point_8:point,Line($point_7:point,$point_11:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=43.495370370370367), line(a=point(x=0.0, y=43.0), b=point(x=216.0, y=44.0))]
PointLiesOnLine($point_4:point,Line($point_10:point,$point_15:point)) TV(norm=0.000, conf=1.00) [point(x=46.729492747684994, y=43.216340244202243), line(a=point(x=46.0, y=2.0), b=point(x=48.0, y=115.0))]
PointLiesOnLine($point_0:point,Line($point_9:point,$point_12:point)) TV(norm=0.000, conf=1.00) [point(x=47.575221238938056, y=91.0), line(a=point(x=0.0, y=91.0), b=point(x=216.0, y=91.0))]
Ge(180,89()) TV(norm=0.000, conf=1.00) [180, 89.0]
Equals($s:number,Div(MeasureOf(Angle($point_7:point,$point_8:point,$point_2:point)),Degree())) None None
PointLiesOnLine($point_1:point,Line($point_5:point,$point_6:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=43.81018518518519), line(a=point(x=175.0, y=91.0), b=point(x=175.0, y=0.0))]
PointLiesOnLine($point_1:point,Line($point_7:point,$point_11:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=43.81018518518519), line(a=point(x=0.0, y=43.0), b=point(x=216.0, y=44.0))]
PointLiesOnLine($point_0:point,Line($point_4:point,$point_15:point)) TV(norm=0.000, conf=1.00) [point(x=47.575221238938056, y=91.0), line(a=point(x=46.729492747684994, y=43.216340244202243), b=point(x=48.0, y=115.0))]
PointLiesOnLine($point_13:point,Line($point_0:point,$point_12:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=91.0), line(a=point(x=47.575221238938056, y=91.0), b=point(x=216.0, y=91.0))]
PointLiesOnLine($point_0:point,Line($point_9:point,$point_13:point)) TV(norm=0.000, conf=1.00) [point(x=47.575221238938056, y=91.0), line(a=point(x=0.0, y=91.0), b=point(x=107.0, y=91.0))]
PointLiesOnLine($point_1:point,Line($point_8:point,$point_11:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=43.81018518518519), line(a=point(x=107.0, y=43.495370370370367), b=point(x=216.0, y=44.0))]
PointLiesOnLine($point_13:point,Line($point_0:point,$point_5:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=91.0), line(a=point(x=47.575221238938056, y=91.0), b=point(x=175.0, y=91.0))]
Ge(180,$s:number) None None
PointLiesOnLine($point_13:point,Line($point_3:point,$point_8:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=91.0), line(a=point(x=107.0, y=117.0), b=point(x=107.0, y=43.495370370370367))]
PointLiesOnLine($point_5:point,Line($point_12:point,$point_13:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=91.0), line(a=point(x=216.0, y=91.0), b=point(x=107.0, y=91.0))]
Equals($t:number,Div(MeasureOf(Angle($point_8:point,$point_1:point,$point_6:point)),Degree())) None None
PointLiesOnLine($point_4:point,Line($point_7:point,$point_11:point)) TV(norm=0.000, conf=1.00) [point(x=46.729492747684994, y=43.216340244202243), line(a=point(x=0.0, y=43.0), b=point(x=216.0, y=44.0))]
PointLiesOnLine($point_4:point,Line($point_1:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=46.729492747684994, y=43.216340244202243), line(a=point(x=175.0, y=43.81018518518519), b=point(x=0.0, y=43.0))]
Ge(180,90()) TV(norm=0.000, conf=1.00) [180, 90.0]
PointLiesOnLine($point_1:point,Line($point_4:point,$point_11:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=43.81018518518519), line(a=point(x=46.729492747684994, y=43.216340244202243), b=point(x=216.0, y=44.0))]
PointLiesOnLine($point_13:point,Line($point_5:point,$point_9:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=91.0), line(a=point(x=175.0, y=91.0), b=point(x=0.0, y=91.0))]
PointLiesOnLine($point_4:point,Line($point_0:point,$point_10:point)) TV(norm=0.000, conf=1.00) [point(x=46.729492747684994, y=43.216340244202243), line(a=point(x=47.575221238938056, y=91.0), b=point(x=46.0, y=2.0))]
Equals($u:number,Div(MeasureOf(Angle($point_8:point,$point_13:point,$point_12:point)),Degree())) None None
PointLiesOnLine($point_5:point,Line($point_6:point,$point_14:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=91.0), line(a=point(x=175.0, y=0.0), b=point(x=175.0, y=117.0))]
Equals($r:number,Div(MeasureOf(Angle($point_7:point,$point_4:point,$point_10:point)),Degree())) None None
PointLiesOnLine($point_5:point,Line($point_9:point,$point_12:point)) TV(norm=0.000, conf=1.00) [point(x=175.0, y=91.0), line(a=point(x=0.0, y=91.0), b=point(x=216.0, y=91.0))]
PointLiesOnLine($point_4:point,Line($point_7:point,$point_8:point)) TV(norm=0.000, conf=1.00) [point(x=46.729492747684994, y=43.216340244202243), line(a=point(x=0.0, y=43.0), b=point(x=107.0, y=43.495370370370367))]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=43.495370370370367), line(a=point(x=175.0, y=43.81018518518519), b=point(x=46.729492747684994, y=43.216340244202243))]
PointLiesOnLine($point_8:point,Line($point_2:point,$point_13:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=43.495370370370367), line(a=point(x=107.0, y=0.0), b=point(x=107.0, y=91.0))]
PointLiesOnLine($point_8:point,Line($point_1:point,$point_7:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=43.495370370370367), line(a=point(x=175.0, y=43.81018518518519), b=point(x=0.0, y=43.0))]
Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_8:point,$point_1:point)),Degree())) TV(norm=0.265, conf=1.00) [90.0, 90.265256343376]
PointLiesOnLine($point_13:point,Line($point_2:point,$point_3:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=91.0), line(a=point(x=107.0, y=0.0), b=point(x=107.0, y=117.0))]
PointLiesOnLine($point_0:point,Line($point_10:point,$point_15:point)) TV(norm=0.000, conf=1.00) [point(x=47.575221238938056, y=91.0), line(a=point(x=46.0, y=2.0), b=point(x=48.0, y=115.0))]
PointLiesOnLine($point_0:point,Line($point_5:point,$point_9:point)) TV(norm=0.000, conf=1.00) [point(x=47.575221238938056, y=91.0), line(a=point(x=175.0, y=91.0), b=point(x=0.0, y=91.0))]
PointLiesOnLine($point_8:point,Line($point_4:point,$point_11:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=43.495370370370367), line(a=point(x=46.729492747684994, y=43.216340244202243), b=point(x=216.0, y=44.0))]
Ge(180,$u:number) None None
PointLiesOnLine($point_13:point,Line($point_9:point,$point_12:point)) TV(norm=0.000, conf=1.00) [point(x=107.0, y=91.0), line(a=point(x=0.0, y=91.0), b=point(x=216.0, y=91.0))]
Ge(180,$t:number) None None
Solving...
Given formulas: set([Ge(180,$v:number), Equals(89(),Div(MeasureOf(Angle($point_9:point,$point_0:point,$point_10:point)),Degree())), Ge(180,$r:number), Parallel(Line($point_7:point,$point_11:point),Line($point_9:point,$point_12:point)), Not(Equals($Which:ground,90())), Equals(90(),Div(MeasureOf(Angle($point_6:point,$point_5:point,$point_12:point)),Degree())), PointLiesOnLine($point_8:point,Line($point_2:point,$point_3:point)), PointLiesOnLine($point_1:point,Line($point_6:point,$point_14:point)), Equals($v:number,Div(MeasureOf(Angle($point_0:point,$point_5:point,$point_1:point)),Degree())), PointLiesOnLine($point_5:point,Line($point_1:point,$point_14:point)), PointLiesOnLine($point_5:point,Line($point_0:point,$point_12:point)), PointLiesOnLine($point_8:point,Line($point_7:point,$point_11:point)), PointLiesOnLine($point_4:point,Line($point_10:point,$point_15:point)), PointLiesOnLine($point_0:point,Line($point_9:point,$point_12:point)), Ge(180,89()), Equals($s:number,Div(MeasureOf(Angle($point_7:point,$point_8:point,$point_2:point)),Degree())), PointLiesOnLine($point_1:point,Line($point_5:point,$point_6:point)), PointLiesOnLine($point_1:point,Line($point_7:point,$point_11:point)), PointLiesOnLine($point_0:point,Line($point_4:point,$point_15:point)), PointLiesOnLine($point_13:point,Line($point_0:point,$point_12:point)), PointLiesOnLine($point_0:point,Line($point_9:point,$point_13:point)), PointLiesOnLine($point_1:point,Line($point_8:point,$point_11:point)), PointLiesOnLine($point_13:point,Line($point_0:point,$point_5:point)), Ge(180,$s:number), PointLiesOnLine($point_13:point,LERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $squares:square
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ERROR:root:failed to ground variable: $sides:side
ine($point_3:point,$point_8:point)), PointLiesOnLine($point_5:point,Line($point_12:point,$point_13:point)), Equals($t:number,Div(MeasureOf(Angle($point_8:point,$point_1:point,$point_6:point)),Degree())), PointLiesOnLine($point_4:point,Line($point_7:point,$point_11:point)), PointLiesOnLine($point_4:point,Line($point_1:point,$point_7:point)), Ge(180,90()), PointLiesOnLine($point_1:point,Line($point_4:point,$point_11:point)), PointLiesOnLine($point_13:point,Line($point_5:point,$point_9:point)), PointLiesOnLine($point_4:point,Line($point_0:point,$point_10:point)), Equals($u:number,Div(MeasureOf(Angle($point_8:point,$point_13:point,$point_12:point)),Degree())), PointLiesOnLine($point_5:point,Line($point_6:point,$point_14:point)), Equals($r:number,Div(MeasureOf(Angle($point_7:point,$point_4:point,$point_10:point)),Degree())), PointLiesOnLine($point_5:point,Line($point_9:point,$point_12:point)), PointLiesOnLine($point_4:point,Line($point_7:point,$point_8:point)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_4:point)), PointLiesOnLine($point_8:point,Line($point_2:point,$point_13:point)), PointLiesOnLine($point_8:point,Line($point_1:point,$point_7:point)), Equals(90(),Div(MeasureOf(Angle($point_2:point,$point_8:point,$point_1:point)),Degree())), PointLiesOnLine($point_13:point,Line($point_2:point,$point_3:point)), PointLiesOnLine($point_0:point,Line($point_10:point,$point_15:point)), PointLiesOnLine($point_0:point,Line($point_5:point,$point_9:point)), PointLiesOnLine($point_8:point,Line($point_4:point,$point_11:point)), Ge(180,$u:number), PointLiesOnLine($point_13:point,Line($point_9:point,$point_12:point)), Ge(180,$t:number)])
iteration 1:
    nfev: 338381
     fun: 1.181942189662347
       x: array([ 166.04539068,   99.20792469,    3.97324004,   67.32971893,
       -236.91647901, -182.36499791, -206.11298636,  287.4108887 ,
        200.40699712,   22.79108709,   56.87846436, -133.96828691,
        216.52339319,   55.5022006 , -247.63810091,  240.13015195,
        191.06386248,   57.87989852,  145.09315599,    9.66948981,
         61.83434744,  -53.88172695,  316.04967147,  122.2236402 ,
         48.78316667, -124.28363455,  107.85215133,   43.06667638,
         90.00000696,  156.71919759,  157.7192734 ,  157.71924533,
         90.00004436, -286.65413628,  173.75229052])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 8745
     nit: 100
iteration 2:
    nfev: 332163
     fun: 9.0112319108826e-06
       x: array([  -2.96522132, -162.89854801,   -8.06048853,  -68.92054796,
         25.43841037,  -83.1898347 ,   64.24079428,   48.66133517,
       -134.34813289,   -3.4340913 ,   -8.4190367 ,  -35.9302166 ,
       -101.86302057,  -49.49242795,   67.91333952, -121.81101542,
        -86.29618532,  -53.41500446, -125.75513485,   14.59657222,
        -15.73035845,   31.8889677 , -102.83886029,  -78.67244915,
        -33.35947947,  -15.46186489,  -61.29682588,  -25.95810302,
         89.9999857 ,   89.000025  ,   90.00003349,   90.00005122,
         90.00001612,   60.88022663,  -34.49808596])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 8544
     nit: 100
3902.01 seconds
ans: {1: TV(norm=1.000, conf=0.01), 2: TV(norm=69939.037, conf=0.00), 3: TV(norm=19522.726, conf=0.00), 4: TV(norm=29856.399, conf=0.00), 5: TV(norm=62048.229, conf=0.00)}
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
48/55 complete, 11 correct, 0 penalized, 30 error
--------------------------------------------------------------------------------
id: 1014
full unit_test entry
WWWWWWW opt_model
cc tree: CC@14[and]($sides:line@7[sides], $x:line@15[x]) 1.0
1.98, IsSideOf@7[sides]($x:line@15[x], $squares:square@5[squares])
2.75, Three@4[three]($squares:square@5[squares])

completed formulas:
IsSquare($squares:quad)
Three($squares:quad)
IsSideOf({$x:line,$sides:line},$squares:quad)

cc tree: CC@5[and]($A:point@1[A], $B:point@3[B]) 1.0
cc tree: CC@5[and]($A:point@1[A], $C:point@6[C]) 1.0
3.85, Is@13[is](ValueOf@15[value]($x:number@17[x]), $What:number@12[what])
6.79, PointLiesOnLine@7[lie]($A:point@1[A], $line:line@9[line])
9.58, PointLiesOnLine@8[on]($C:point@6[C], $l:line@10[l])
10.15, PointLiesOnLine@7[lie]($B:point@3[B])

completed formulas:
PointLiesOnLine({$A:point,$B:point,$C:point},$line:line)
PointLiesOnLine({$C:point,$A:point},$l:line)
Is(ValueOf($x:number),$What:number)
PointLiesOnLine($B:point,$line:line)

PointLiesOnLine($point_10:point,Line($point_0:point,$point_4:point)) TV(norm=0.098, conf=0.97) [point(x=71.216903073286048, y=70.05910165484633), line(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=69.015625, y=115.5))]
PointLiesOnLine($point_6:point,Line($point_1:point,$point_4:point)) TV(norm=0.006, conf=1.00) [point(x=130.01136363636363, y=115.5), line(a=point(x=220.0, y=115.0), b=point(x=69.015625, y=115.5))]
PointLiesOnLine($point_5:point,Line($point_0:point,$point_11:point)) TV(norm=0.038, conf=0.99) [point(x=21.36795674445078, y=73.821286283437672), line(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=0.0, y=83.0))]
Equals(7(),LengthOf(Line($point_4:point,$point_6:point))) TV(norm=53.996, conf=0.00) [7.0, 60.995738636363626]
IsSquare(Quad($point_4:point,$point_6:point,$point_2:point,$point_0:point)) TV(norm=9.130, conf=0.67) [quad(a=point(x=69.015625, y=115.5), b=point(x=130.01136363636363, y=115.5), c=point(x=130.06569036717011, y=30.973670270260278), d=point(x=73.634925463948889, y=53.682385153635536))]
IsSquare(Quad($point_0:point,$point_4:point,$point_6:point,$point_9:point)) TV(norm=1.298, conf=0.92) [quad(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=69.015625, y=115.5), c=point(x=130.01136363636363, y=115.5), d=point(x=132.22662173546757, y=52.028643639427131))]
IsSquare(Quad($point_2:point,$point_5:point,$point_7:point,$point_6:point)) TV(norm=28.036, conf=0.05) [quad(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=21.36795674445078, y=73.821286283437672), c=point(x=27.0, y=115.0), d=point(x=130.01136363636363, y=115.5))]
IsSquare(Quad($point_2:point,$point_9:point,$point_5:point,$point_10:point)) TV(norm=32.645, conf=0.00) [quad(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=132.22662173546757, y=52.028643639427131), c=point(x=21.36795674445078, y=73.821286283437672), d=point(x=71.216903073286048, y=70.05910165484633))]
IsSquare(Quad($point_0:point,$point_9:point,$point_5:point,$point_10:point)) TV(norm=28.392, conf=0.00) [quad(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=132.22662173546757, y=52.028643639427131), c=point(x=21.36795674445078, y=73.821286283437672), d=point(x=71.216903073286048, y=70.05910165484633))]
PointLiesOnLine($point_6:point,Line($point_1:point,$point_7:point)) TV(norm=0.010, conf=1.00) [point(x=130.01136363636363, y=115.5), line(a=point(x=220.0, y=115.0), b=point(x=27.0, y=115.0))]
PointLiesOnLine($point_2:point,Line($point_8:point,$point_11:point)) TV(norm=0.013, conf=1.00) [point(x=130.06569036717011, y=30.973670270260278), line(a=point(x=208.0, y=1.0), b=point(x=0.0, y=83.0))]
IsSquare(Quad($point_5:point,$point_7:point,$point_4:point,$point_0:point)) TV(norm=6.403, conf=0.62) [quad(a=point(x=21.36795674445078, y=73.821286283437672), b=point(x=27.0, y=115.0), c=point(x=69.015625, y=115.5), d=point(x=73.634925463948889, y=53.682385153635536))]
PointLiesOnLine($point_0:point,Line($point_8:point,$point_11:point)) TV(norm=0.005, conf=1.00) [point(x=73.634925463948889, y=53.682385153635536), line(a=point(x=208.0, y=1.0), b=point(x=0.0, y=83.0))]
IsSquare(Quad($point_10:point,$point_5:point,$point_7:point,$point_4:point)) TV(norm=1.721, conf=0.82) [quad(a=point(x=71.216903073286048, y=70.05910165484633), b=point(x=21.36795674445078, y=73.821286283437672), c=point(x=27.0, y=115.0), d=point(x=69.015625, y=115.5))]
Is(ValueOf($x:number),$What:number) None None
PointLiesOnLine($point_0:point,Line($point_2:point,$point_11:point)) TV(norm=0.004, conf=1.00) [point(x=73.634925463948889, y=53.682385153635536), line(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=0.0, y=83.0))]
IsSquare(Quad($point_1:point,$point_3:point,$point_2:point,$point_6:point)) TV(norm=1.947, conf=0.94) [quad(a=point(x=220.0, y=115.0), b=point(x=218.02361433989967, y=30.34361107712386), c=point(x=130.06569036717011, y=30.973670270260278), d=point(x=130.01136363636363, y=115.5))]
PointLiesOnLine($point_2:point,Line($point_5:point,$point_8:point)) TV(norm=0.008, conf=1.00) [point(x=130.06569036717011, y=30.973670270260278), line(a=point(x=21.36795674445078, y=73.821286283437672), b=point(x=208.0, y=1.0))]
IsSquare(Quad($point_2:point,$point_9:point,$point_11:point,$point_10:point)) TV(norm=34.443, conf=0.00) [quad(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=132.22662173546757, y=52.028643639427131), c=point(x=0.0, y=83.0), d=point(x=71.216903073286048, y=70.05910165484633))]
PointLiesOnLine($point_5:point,Line($point_2:point,$point_11:point)) TV(norm=0.030, conf=0.99) [point(x=21.36795674445078, y=73.821286283437672), line(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=0.0, y=83.0))]
PointLiesOnLine($point_4:point,Line($point_1:point,$point_7:point)) TV(norm=0.015, conf=1.00) [point(x=69.015625, y=115.5), line(a=point(x=220.0, y=115.0), b=point(x=27.0, y=115.0))]
Equals(5(),LengthOf(Line($point_4:point,$point_7:point))) TV(norm=37.019, conf=0.00) [5.0, 42.018599978350359]
PointLiesOnLine($point_9:point,Line($point_2:point,$point_6:point)) TV(norm=0.137, conf=0.96) [point(x=132.22662173546757, y=52.028643639427131), line(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=130.01136363636363, y=115.5))]
PointLiesOnLine($point_4:point,Line($point_6:point,$point_7:point)) TV(norm=0.012, conf=1.00) [point(x=69.015625, y=115.5), line(a=point(x=130.01136363636363, y=115.5), b=point(x=27.0, y=115.0))]
PointLiesOnLine($point_0:point,Line($point_2:point,$point_5:point)) TV(norm=0.015, conf=1.00) [point(x=73.634925463948889, y=53.682385153635536), line(a=point(x=130.06569036717011, y=30.973670270260278), b=point(x=21.36795674445078, y=73.821286283437672))]
IsSquare(Quad($point_5:point,$point_9:point,$point_11:point,$point_10:point)) TV(norm=25.388, conf=0.00) [quad(a=point(x=21.36795674445078, y=73.821286283437672), b=point(x=132.22662173546757, y=52.028643639427131), c=point(x=0.0, y=83.0), d=point(x=71.216903073286048, y=70.05910165484633))]
IsSquare(Quad($point_10:point,$point_4:point,$point_6:point,$point_2:point)) TV(norm=10.342, conf=0.54) [quad(a=point(x=71.216903073286048, y=70.05910165484633), b=point(x=69.015625, y=115.5), c=point(x=130.01136363636363, y=115.5), d=point(x=130.06569036717011, y=30.973670270260278))]
PointLiesOnLine($point_5:point,Line($point_8:point,$point_11:point)) TV(norm=0.034, conf=0.99) [point(x=21.36795674445078, y=73.821286283437672), line(a=point(x=208.0, y=1.0), b=point(x=0.0, y=83.0))]
PointLiesOnLine($point_0:point,Line($point_5:point,$point_8:point)) TV(norm=0.006, conf=1.00) [point(x=73.634925463948889, y=53.682385153635536), line(a=point(x=21.36795674445078, y=73.821286283437672), b=point(x=208.0, y=1.0))]
Equals($x:number,LengthOf(Line($point_1:point,$point_6:point))) None None
IsSquare(Quad($point_0:point,$point_9:point,$point_2:point,$point_10:point)) TV(norm=23.619, conf=0.00) [quad(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=132.22662173546757, y=52.028643639427131), c=point(x=130.06569036717011, y=30.973670270260278), d=point(x=71.216903073286048, y=70.05910165484633))]
PointLiesOnLine($point_2:point,Line($point_0:point,$point_8:point)) TV(norm=0.015, conf=1.00) [point(x=130.06569036717011, y=30.973670270260278), line(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=208.0, y=1.0))]
IsSquare(Quad($point_5:point,$point_7:point,$point_6:point,$point_9:point)) TV(norm=25.156, conf=0.08) [quad(a=point(x=21.36795674445078, y=73.821286283437672), b=point(x=27.0, y=115.0), c=point(x=130.01136363636363, y=115.5), d=point(x=132.22662173546757, y=52.028643639427131))]
IsSquare(Quad($point_0:point,$point_9:point,$point_11:point,$point_10:point)) TV(norm=32.772, conf=0.00) [quad(a=point(x=73.634925463948889, y=53.682385153635536), b=point(x=132.22662173546757, y=52.028643639427131), c=point(x=0.0, y=83.0), d=point(x=71.216903073286048, y=70.05910165484633))]
Solving...
Given formulas: set([PointLiesOnLine($point_10:point,Line($point_0:point,$point_4:point)), PointLiesOnLine($point_6:point,Line($point_1:point,$point_4:point)), PointLiesOnLine($point_5:point,Line($point_0:point,$point_11:point)), Equals(7(),LengthOf(Line($point_4:point,$point_6:point))), IsSquare(Quad($point_4:point,$point_6:point,$point_2:point,$point_0:point)), IsSquare(Quad($point_0:point,$point_4:point,$point_6:point,$point_9:point)), IsSquare(Quad($point_2:point,$point_5:point,$point_7:point,$point_6:point)), IsSquare(Quad($point_2:point,$point_9:point,$point_5:point,$point_10:point)), IsSquare(Quad($point_0:point,$point_9:point,$point_5:point,$point_10:point)), PointLiesOnLine($point_6:point,Line($point_1:point,$point_7:point)), PointLiesOnLine($point_2:point,Line($point_8:point,$point_11:point)), IsSquare(Quad($point_5:point,$point_7:point,$point_4:point,$point_0:point)), PointLiesOnLine($point_0:point,Line($point_8:point,$point_11:point)), IsSquare(Quad($point_10:point,$point_5:point,$point_7:point,$point_4:point)), Is(ValueOf($x:number),$What:number), PointLiesOnLine($point_0:point,Line($point_2:point,$point_11:point)), IsSquare(Quad($point_1:point,$point_3:point,$point_2:point,$point_6:point)), PointLiesOnLine($point_2:point,Line($point_5:point,$point_8:point)), IsSquare(Quad($point_2:point,$point_9:point,$point_11:point,$point_10:point)), PointLiesOnLine($point_5:point,Line($point_2:point,$point_11:point)), PointLiesOnLine($point_4:point,Line($point_1:point,$point_7:point)), Equals(5(),LengthOf(Line($point_4:point,$point_7:point))), PointLiesOnLine($point_9:point,Line($point_2:point,$point_6:point)), PointLiesOnLine($point_4:point,Line($point_6:point,$point_7:point)), PointLiesOnLine($point_0:point,Line($point_2:point,$point_5:point)), IsSquare(Quad($point_5:point,$point_9:point,$point_11:point,$point_10:point)), IsSquare(Quad($point_10:point,$point_4:point,$point_6:point,$point_2:point)), PointLiesOnLine($point_5:point,Line($point_8:point,$point_11:point)), PointLiesOnLine($point_0:point,Line($point_5:point,$point_8:point)), Equals($x:number,LengthOf(Line($point_1:point,$point_6:point))), IsSquare(Quad($point_0:point,$point_9:point,$point_2:point,$point_10:point)), PointLiesOnLine($point_2:point,Line($point_0:point,$point_8:point)), IsSquare(Quad($point_5:point,$point_7:point,$point_6:point,$point_9:point)), IsSquare(Quad($point_0:point,$point_9:point,$point_11:point,$point_10:point))])
iteration 1:
    nfev: 254230
     fun: 16.004947388918854
       x: array([  5.00299569,  -8.53173581,   4.09544692,  -9.64177178,
       -12.19669732,   0.07777614,   8.00067788,   4.1126956 ,
        -3.53287466,   5.35986833,  -0.72739517,   4.25661018,
         0.34407322,  -0.76281275,  -4.63892423,   3.79108631,
        -0.78029666,  -0.74365705,   0.36020107,   3.96454878,
         4.39095296,   3.96487572,   4.3909651 ,   5.00298662])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 8844
     nit: 100
iteration 2:
    nfev: 258082
     fun: 23.549322715906698
       x: array([  6.74520238,  -5.54928807,   6.36834789, -10.80413386,
       -12.88983802,  -3.84914036,   3.25003293,  -0.22520656,
        -3.11942509,  -4.54949888,   1.24025417,  -0.20575434,
        -3.10671968,   5.46320754,  -7.20917014, -15.18485489,
        11.16999459,   3.98119537,  -0.36776833,  -0.37505204,
         3.97642112,  -0.37345242,   3.97886994,   6.74462673])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 9038
     nit: 100
iteration 3:
    nfev: 242423
     fun: 16.001932872717344
       x: array([ 4.99877846, -9.12634408,  1.88814978, -9.0491303 , -8.70170844,
       -1.68706607,  7.71550175,  3.08771425, -4.27242028,  5.50995645,
        0.49101907,  4.14350181, -0.54527963, -1.91114386, -4.19654799,
        1.83296718, -3.11122518, -0.70989287,  0.65650066,  2.94079598,
        5.13104325,  2.94113926,  5.13114049,  4.99877365])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 8702
     nit: 100
6671.83 seconds
ans: 4.99877845961
RESULT: (e,p,c) = False, False, False 

(e,p,c) = False, False, False
--------------------------------------------------------------------------------
49/55 complete, 11 correct, 0 penalized, 30 error
--------------------------------------------------------------------------------
id: 1017
full unit_test entry
WWWWWWW opt_model
3.85, Is@6[is](ValueOf@8[value]($y:number@10[y]), $What:number@5[what])

completed formulas:
Is(ValueOf($y:number),$What:number)

Equals($y:number,Div(MeasureOf(Angle($point_4:point,$point_2:point,$point_0:point)),Degree())) None None
Equals(Mul(2(),$x:number),Div(MeasureOf(Angle($point_3:point,$point_2:point,$point_1:point)),Degree())) None None
PointLiesOnLine($point_2:point,Line($point_3:point,$point_4:point)) TV(norm=0.000, conf=1.00) [point(x=74.749163879598669, y=42.642140468227424), line(a=point(x=150.0, y=0.0), b=point(x=0.0, y=85.0))]
Ge(180,Mul(2(),$x:number)) None None
Ge(180,Mul(4(),$x:number)) None None
PointLiesOnLine($point_2:point,Line($point_0:point,$point_1:point)) TV(norm=0.000, conf=1.00) [point(x=74.749163879598669, y=42.642140468227424), line(a=point(x=0.0, y=0.0), b=point(x=149.0, y=85.0))]
Is(ValueOf($y:number),$What:number) None None
Ge(180,$y:number) None None
Equals(Mul(4(),$x:number),Div(MeasureOf(Angle($point_0:point,$point_2:point,$point_3:point)),Degree())) None None
Solving...
Given formulas: set([Equals($y:number,Div(MeasureOf(Angle($point_4:point,$point_2:point,$point_0:point)),Degree())), Equals(Mul(2(),$x:number),Div(MeasureOf(Angle($point_3:point,$point_2:point,$point_1:point)),Degree())), PointLiesOnLine($point_2:point,Line($point_3:point,$point_4:point)), Ge(180,Mul(2(),$x:number)), Ge(180,Mul(4(),$x:number)), PointLiesOnLine($point_2:point,Line($point_0:point,$point_1:point)), Is(ValueOf($y:number),$What:number), Ge(180,$y:number), Equals(Mul(4(),$x:number),Div(MeasureOf(Angle($point_0:point,$point_2:point,$point_3:point)),Degree()))])
iteration 1:
    nfev: 60664
     fun: 2.2809366604370496e-06
       x: array([ 135.95794245,  149.09972699,   22.23726588,   96.40266778,
         59.99998084,  111.29186318,   25.58796778,   59.99998153,
         30.00000076, -142.52244849,   45.03114656])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4151
     nit: 100
Equals(59.999980840074841,40())
59.9999808401
Equals(59.999980840074841,45())
59.9999808401
Equals(59.999980840074841,50())
59.9999808401
Equals(59.999980840074841,60())
59.9999808401
Equals(59.999980840074841,72())
59.9999808401
54.83 seconds
ans: {1: TV(norm=20.000, conf=0.60), 2: TV(norm=15.000, conf=0.71), 3: TV(norm=10.000, conf=0.82), 4: TV(norm=0.000, conf=1.00), 5: TV(norm=12.000, conf=0.82)}
idx 4, answeri: 4.0
Correct for multiple choice: index: 4 value: TV(norm=0.000, conf=1.00), golden: 4.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
50/55 complete, 12 correct, 0 penalized, 30 error
--------------------------------------------------------------------------------
id: 1018
full unit_test entry
WWWWWWW opt_model
2.97, Is@6[is]($ABCDEF:hexagon@5[ABCDEF], $hexagon:hexagon@9[hexagon])
5.91, Is@14[is]($point:point@15[point], $O:point@16[O])
6.83, IsRegular@8[regular]($hexagon:hexagon@9[hexagon])
7.63, IsCenterOf@13[center]($O:point@16[O], $hexagon:hexagon@9[hexagon])

completed formulas:
IsCenterOf($O:point,$hexagon:hexagon)
IsRegular($hexagon:hexagon)
Is($ABCDEF:hexagon,$hexagon:hexagon)
Is($point:point,$O:point)

3.87, Is@1[is](ValueOf@3[value]($x:number@5[x]), $What:number@0[What])

completed formulas:
Is(ValueOf($x:number),$What:number)

PointLiesOnLine($point_6:point,Line($point_1:point,$point_4:point)) TV(norm=0.028, conf=0.99) [point(x=48.633431085043988, y=42.014662756598241), line(a=point(x=73.293094883258817, y=2.0373406193078267), b=point(x=24.162962962962961, y=84.333333333333343))]
Is(Hexagon($point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point,$point_4:point),Hexagon($point_4:point,$point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point)) TV(norm=0.000, conf=1.00) [(point(x=72.844444444444434, y=84.333333333333343), point(x=95.550561797752806, y=42.509363295880149), point(x=73.293094883258817, y=2.0373406193078267), point(x=24.629629629629626, y=1.3333333333333357), point(x=1.9122477191582874, y=42.573633548023793), point(x=24.162962962962961, y=84.333333333333343)), (point(x=24.162962962962961, y=84.333333333333343), point(x=72.844444444444434, y=84.333333333333343), point(x=95.550561797752806, y=42.509363295880149), point(x=73.293094883258817, y=2.0373406193078267), point(x=24.629629629629626, y=1.3333333333333357), point(x=1.9122477191582874, y=42.573633548023793))]
Is($point_6:point,$point_6:point) TV(norm=0.000, conf=1.00) [point(x=48.633431085043988, y=42.014662756598241), point(x=48.633431085043988, y=42.014662756598241)]
Is(ValueOf($x:number),$What:number) None None
Ge(180,$x:number) None None
IsRegular(Hexagon($point_4:point,$point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point)) TV(norm=0.868, conf=0.95) [(point(x=24.162962962962961, y=84.333333333333343), point(x=72.844444444444434, y=84.333333333333343), point(x=95.550561797752806, y=42.509363295880149), point(x=73.293094883258817, y=2.0373406193078267), point(x=24.629629629629626, y=1.3333333333333357), point(x=1.9122477191582874, y=42.573633548023793))]
IsCenterOf($point_6:point,Hexagon($point_4:point,$point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point)) TV(norm=0.691, conf=0.95) [point(x=48.633431085043988, y=42.014662756598241), (point(x=24.162962962962961, y=84.333333333333343), point(x=72.844444444444434, y=84.333333333333343), point(x=95.550561797752806, y=42.509363295880149), point(x=73.293094883258817, y=2.0373406193078267), point(x=24.629629629629626, y=1.3333333333333357), point(x=1.9122477191582874, y=42.573633548023793))]
Equals($x:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_6:point)),Degree())) None None
Solving...
Given formulas: set([PointLiesOnLine($point_6:point,Line($point_1:point,$point_4:point)), Is(Hexagon($point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point,$point_4:point),Hexagon($point_4:point,$point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point)), Is($point_6:point,$point_6:point), Is(ValueOf($x:number),$What:number), Ge(180,$x:number), IsRegular(Hexagon($point_4:point,$point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point)), IsCenterOf($point_6:point,Hexagon($point_4:point,$point_2:point,$point_5:point,$point_1:point,$point_3:point,$point_0:point)), Equals($x:number,Div(MeasureOf(Angle($point_3:point,$point_0:point,$point_6:point)),Degree()))])
iteration 1:
    nfev: 109960
     fun: 3.7065677682170117e-06
       x: array([  4.95601294,   7.51664227,   0.64073846,  -7.34040537,
        60.00003354,   8.92582129,   0.41730238,  -6.45860823,
        -3.37060346,  60.00003364,  -6.5703229 ,   4.76252061,
        -3.17709983,   7.62836177])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 6213
     nit: 100
Equals(60.000033540832206,80())
60.0000335408
Equals(60.000033540832206,60())
60.0000335408
Equals(60.000033540832206,40())
60.0000335408
Equals(60.000033540832206,30())
60.0000335408
Equals(60.000033540832206,20())
60.0000335408
249.55 seconds
ans: {1: TV(norm=20.000, conf=0.71), 2: TV(norm=0.000, conf=1.00), 3: TV(norm=20.000, conf=0.60), 4: TV(norm=30.000, conf=0.33), 5: TV(norm=40.000, conf=0.00)}
idx 2, answeri: 2.0
Correct for multiple choice: index: 2 value: TV(norm=0.000, conf=1.00), golden: 2.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
51/55 complete, 13 correct, 0 penalized, 30 error
---------------------------------------------------------ERROR:root:failed to ground variable: $entity:entity
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:failed to ground variable: $entity:entity
ERROR:root:1019
ERROR:root:unsupported operand type(s) for &: 'function' and 'NoneType'
Traceback (most recent call last):
  File "/home/alvaroh/geosolver/geosolver/run.py", line 164, in full_unit_test
    result = _full_unit_test(combined_model, question, label_data)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 325, in _full_unit_test
    local_entities = semantic_tree_to_serialized_entities(match_parse, t, number, value_expr_formulas)
  File "/home/alvaroh/geosolver/geosolver/run.py", line 181, in semantic_tree_to_serialized_entities
    grounded_formula = ground_formulas(match_parse, [formula], value_expr_formulas)[0]
  File "geosolver/grounding/ground_formula.py", line 26, in ground_formulas
    local_scores = [core_parse.evaluate(f) for f in grounded_formulas]
  File "geosolver/diagram/states.py", line 99, in evaluate
    return evaluate(formula, self.variable_assignment)
  File "geosolver/ontology/ontology_semantics.py", line 488, in evaluate
    out = reduce(operator.__and__, (evaluate(child, assignment) for child in formula.children), True)
TypeError: unsupported operand type(s) for &: 'function' and 'NoneType'
-----------------------
id: 1019
full unit_test entry
WWWWWWW opt_model
3.23, Equals@3[has](AreaOf@5[area]($circle:circle@1[circle]), $@v_0:number@7[@v_0])
3.24, Is@9[is]($@v_0:number@7[@v_0], 8@12[8])

Exceptiont in full_unit_test
RESULT: (e,p,c) = True, False, False 

(e,p,c) = True, False, False
--------------------------------------------------------------------------------
52/55 complete, 13 correct, 0 penalized, 31 error
--------------------------------------------------------------------------------
id: 1020
full unit_test entry
WWWWWWW opt_model
2.89, PointLiesOnLine@7:8[is_on]($P:point@6[P], $l:line@10[l])
3.84, IsPoint@5[point]($P:point@6[P])
4.77, IsLine@9[line]($l:line@10[l])

completed formulas:
PointLiesOnLine($P:point,$l:line)
IsPoint($P:point)
IsLine($l:line)

3.87, Is@1[is](ValueOf@3[value]($x:number@5[x]), $What:number@0[What])

completed formulas:
Is(ValueOf($x:number),$What:number)

Equals($x:number,Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_2:point)),Degree())) None None
PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)) TV(norm=0.019, conf=0.99) [point(x=100.85121379488515, y=94.012923014023045), line(a=point(x=207.0, y=95.0), b=point(x=0.0, y=95.0))]
Is(ValueOf($x:number),$What:number) None None
Equals($x:number,Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_6:point)),Degree())) None None
Ge(180,$x:number) None None
Equals($x:number,Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_3:point)),Degree())) None None
Equals($x:number,Div(MeasureOf(Angle($point_2:point,$point_0:point,$point_5:point)),Degree())) None None
Equals($x:number,Div(MeasureOf(Angle($point_6:point,$point_0:point,$point_1:point)),Degree())) None None
Solving...
Given formulas: set([Equals($x:number,Div(MeasureOf(Angle($point_4:point,$point_0:point,$point_2:point)),Degree())), PointLiesOnLine($point_0:point,Line($point_3:point,$point_4:point)), Is(ValueOf($x:number),$What:number), Equals($x:number,Div(MeasureOf(Angle($point_5:point,$point_0:point,$point_6:point)),Degree())), Ge(180,$x:number), Equals($x:number,Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_3:point)),Degree())), Equals($x:number,Div(MeasureOf(Angle($point_2:point,$point_0:point,$point_5:point)),Degree())), Equals($x:number,Div(MeasureOf(Angle($point_6:point,$point_0:point,$point_1:point)),Degree()))])
iteration 1:
    nfev: 77878
     fun: 1.4543882356221616e-06
       x: array([ 35.99999577,  56.16946127,  43.10589662,  20.04314983,
       -13.2339898 ,  -2.71387256,  53.95381726, -43.62048429,
        74.36178953,  35.99999568,  12.55075316,  -6.58409336,
        74.85435827,  31.24681551])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 4388
     nit: 100
Equals(35.999995773308115,15())
35.9999957733
Equals(35.999995773308115,26())
35.9999957733
Equals(35.999995773308115,30())
35.9999957733
Equals(35.999995773308115,35())
35.9999957733
Equals(35.999995773308115,36())
35.9999957733
81.40 seconds
ans: {1: TV(norm=21.000, conf=0.18), 2: TV(norm=10.000, conf=0.68), 3: TV(norm=6.000, conf=0.82), 4: TV(norm=1.000, conf=0.97), 5: TV(norm=0.000, conf=1.00)}
idx 5, answeri: 5.0
Correct for multiple choice: index: 5 value: TV(norm=0.000, conf=1.00), golden: 5.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
53/55 complete, 14 correct, 0 penalized, 31 error
No annotation for image
--------------------------------------------------------------------------------
54/55 complete, 14 correct, 0 penalized, 32 error
--------------------------------------------------------------------------------
id: 1151
full unit_test entry
WWWWWWW opt_model
3.91, Is@1[is](MeasureOf@3[measure]($CBA:angle@6[CBA]), $What:number@0[What])
4.87, IsAngle@5[angle]($CBA:angle@6[CBA])

completed formulas:
Is(MeasureOf($CBA:angle),$What:number)
IsAngle($CBA:angle)

Ge(180,Mul(3(),$x:number)) None None
Is(MeasureOf(Angle($point_0:point,$point_2:point,$point_3:point)),$What:number) None None
Ge(180,50()) TV(norm=0.000, conf=1.00) [180, 50.0]
Equals(Mul(5(),$x:number),Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_2:point)),Degree())) None None
Equals(Mul(3(),$x:number),Div(MeasureOf(Angle($point_0:point,$point_2:point,$point_3:point)),Degree())) None None
Ge(180,Mul(5(),$x:number)) None None
Equals(50(),Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_2:point)),Degree())) TV(norm=10.394, conf=0.81) [50.0, 60.39431876115896]
PointLiesOnLine($point_3:point,Line($point_0:point,$point_1:point)) TV(norm=0.003, conf=1.00) [point(x=73.193121693121697, y=96.855538890971957), line(a=point(x=254.0, y=96.0), b=point(x=0.0, y=97.0))]
Solving...
Given formulas: set([Ge(180,Mul(3(),$x:number)), Is(MeasureOf(Angle($point_0:point,$point_2:point,$point_3:point)),$What:number), Ge(180,50()), Equals(Mul(5(),$x:number),Div(MeasureOf(Angle($point_1:point,$point_3:point,$point_2:point)),Degree())), Equals(Mul(3(),$x:number),Div(MeasureOf(Angle($point_0:point,$point_2:point,$point_3:point)),Degree())), Ge(180,Mul(5(),$x:number)), Equals(50(),Div(MeasureOf(Angle($point_1:point,$point_0:point,$point_2:point)),Degree())), PointLiesOnLine($point_3:point,Line($point_0:point,$point_1:point))])
iteration 1:
    nfev: 42135
     fun: 1.5148741225878837e-06
       x: array([  1.30899688,  -5.05668684,  -7.13411409, -17.92472774,
        -2.46987981,  -8.58551892,  -2.27980499,  24.99999815])
 message: ['requested number of basinhopping iterations completed successfully']
    njev: 3574
     nit: 100
Equals(1.3089968793093056,Mul(125(),Degree()))
1.30899687931
Equals(1.3089968793093056,Mul(105(),Degree()))
1.30899687931
Equals(1.3089968793093056,Mul(75(),Degree()))
1.30899687931
Equals(1.3089968793093056,Mul(50(),Degree()))
1.30899687931
Equals(1.3089968793093056,Mul(25(),Degree()))
1.30899687931
36.90 seconds
ans: {1: TV(norm=0.873, conf=0.50), 2: TV(norm=0.524, conf=0.67), 3: TV(norm=0.000, conf=1.00), 4: TV(norm=0.436, conf=0.60), 5: TV(norm=0.873, conf=0.00)}
idx 3, answeri: 3.0
Correct for multiple choice: index: 3 value: TV(norm=0.000, conf=1.00), golden: 3.0
RESULT: (e,p,c) = False, False, True 

(e,p,c) = False, False, True
--------------------------------------------------------------------------------
55/55 complete, 15 correct, 0 penalized, 32 error
--------------------------------------------------------------------------------
duration:	21066.8
total:		55
penalized:	0
correct:	15
error:		32
20992.10user 3.85system 5:51:16elapsed 99%CPU (0avgtext+0avgdata 6184272maxresident)k
0inputs+29128outputs (0major+1593184minor)pagefaults 0swaps
